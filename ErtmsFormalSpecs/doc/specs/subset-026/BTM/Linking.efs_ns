<NameSpace
 X="40"
 Y="620"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Name="Linking"
 Guid="9f9dab4e-f382-4269-bbaa-ca168d2a7aef"
>
<Comment></Comment>
<NameSpaces>
</NameSpaces>
<Enumerations>
<Enum
 Default="LinkingReaction.NoReaction"
 X="840"
 Y="420"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Verified="TRUE"
 Name="LinkingReaction"
 Guid="f89bae66-9581-4c14-a4f8-9f12da350a92"
>
<ReqRef
 Id="e301f9da-607b-45f9-a74b-a6d53cbfc408"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a2094d2d-a3eb-4e1e-b38b-a088532d2d9e"
>
</ReqRef><Comment>Possible reactions of the train in case of linking inconsistencies.</Comment>
<Values>
<EnumValue
 Value="0"
 Name="TrainTrip"
 Guid="898c135e-d06a-4f7e-98ff-8009406e13bb"
>
</EnumValue><EnumValue
 Value="1"
 Name="CommandServiceBrake"
 Guid="b3670cef-fc7d-4140-a5b1-ec4d3640881f"
>
</EnumValue><EnumValue
 Value="2"
 Name="NoReaction"
 Guid="02abe35f-2ec2-4f21-9966-7eb5b57a74f9"
>
</EnumValue></Values>
</Enum></Enumerations>
<Structures>
<Structure
 Default=""
 X="670"
 Y="420"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="LinkingData"
 Guid="039faab4-39ea-4dfc-864e-e17bf3ad51d8"
>
<ReqRef
 Id="3da69521-ffba-42ec-9ded-f9c719a2f4b8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="747d463c-bc18-4d3b-a388-6f365db794cb"
>
</ReqRef><Comment>Represents the linking data provided by the trackside.</Comment>
<StructureElement
 TypeName="Default.BaseTypes.Length"
 Default="Default.BaseTypes.Length.NA"
 Mode="Internal"
 Implemented="TRUE"
 Verified="TRUE"
 Name="LocationAccuracy"
 Guid="48c30e83-0b8a-451f-a665-739572f17bf6"
>
<ReqRef
 Id="9e4c5ab1-4454-4b08-9df1-666cf07b17ca"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d6916b32-ed01-488d-84a8-d3926f454b8a"
>
<Comment></Comment>
</ReqRef><ReqRef
 Id="851ab4c7-24ed-4bb4-bcf0-18ffccc80fb7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e0079562-8765-46ed-9eab-9ae15ea5197e"
>
</ReqRef><Comment>Represents the location accuracy of balise groups.

Since this only stores what is inside Q_LOCACC (which can only be in the range of 0 to 63) it should be safe to use an ordinary length type here.</Comment>
</StructureElement><StructureElement
 TypeName="Default.Orientation"
 Default="Default.Orientation.Unknown"
 Mode="Internal"
 Implemented="TRUE"
 Verified="TRUE"
 Name="Orientation"
 Guid="7bd50dc0-9751-4f9d-bc2b-72dd001a71c7"
>
<ReqRef
 Id="c15a755a-0bef-44a2-b2b4-43d8f1bbf0ac"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ffb4ecc7-4cfa-422e-b110-a40a5e305211"
>
</ReqRef><ReqRef
 Id="764c6acf-d811-4c13-bcd5-727c1595ada6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9d2dd1a7-fafa-45ca-9013-03206ae2e422"
>
</ReqRef><Comment>Since this stores nothing but the value of Q_LINKORIENTATION (which can only be &quot;nominal&quot; or &quot;reverse&quot;) it should be safe to use Default.Orientation here which can also be of &quot;orientation:both&quot;, #morido, 14/01/15</Comment>
</StructureElement><StructureElement
 TypeName="LinkingReaction"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Verified="TRUE"
 Name="Reaction"
 Guid="b90a4eaf-0013-4c13-8680-c19360f2c1cc"
>
<ReqRef
 Id="a58464f1-c74b-420f-ad30-03d671b764c8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="366fe3be-7e89-4676-be57-6061e714d40d"
>
</ReqRef><ReqRef
 Id="e301f9da-607b-45f9-a74b-a6d53cbfc408"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="33274337-4d51-4ae8-8d28-5231155730c8"
>
</ReqRef><Comment>Reaction to be used in cas of data inconsistencies.</Comment>
</StructureElement><StructureElement
 TypeName="Default.BaseTypes.Distance"
 Default="Default.BaseTypes.Distance.Unknown"
 Mode="Internal"
 Implemented="TRUE"
 Verified="TRUE"
 Name="Distance"
 Guid="bb85ae8b-55aa-46b3-b105-bd724e471a44"
>
<ReqRef
 Id="54049463-080e-41b3-a9aa-83124d1f6471"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c76f1bf6-1c24-4965-9438-d0de5397f86a"
>
</ReqRef><Comment>Distance to the balise group identified by BaliseGroupIdentifier.</Comment>
</StructureElement><StructureElement
 TypeName="Messages.NID_BG"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Verified="TRUE"
 Name="BaliseGroupIdentifier"
 Guid="efde73d0-dee6-401b-b06e-d61b8454101c"
>
<ReqRef
 Id="091b5a23-8a4f-49d0-b23d-9a839b16be15"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fcb4bd9b-790f-490b-ace8-b9a0d5d86b2e"
>
</ReqRef><Comment>Identifier of the linked balise group.</Comment>
</StructureElement></Structure></Structures>
<Collections>
<Collection
 TypeName="LinkingData"
 MaxSize="30"
 Default="[]"
 X="500"
 Y="420"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Verified="TRUE"
 Name="Linkings"
 Guid="48ad5ac5-7c08-40be-bbfe-3ec8f3f50e7d"
>
<ReqRef
 Id="4ab4eb51-5945-4fe4-aa12-eac7e8138282"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7c9afe0e-4a9b-4d5c-94ac-357c1cfaa428"
>
</ReqRef><Comment>Collection of Linking elements.</Comment>
</Collection></Collections>
<Functions>
<Function
 Type="LinkingData"
 Default=""
 X="170"
 Y="210"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="CreateLinkingData"
 Guid="e67dc131-7b89-4020-a3b6-525024b5593e"
>
<Comment>Create an element of Linking data for use in the BTM.Linkings variable</Comment>
<Parameters>
<Parameter
 Type="Default.MessageTypes.Distance"
 Name="D_LINK"
 Guid="c2792e76-3c01-4dd6-af5a-c30fde497bfe"
>
</Parameter><Parameter
 Type="Messages.NID_BG"
 Name="NID_BG"
 Guid="03cfe05a-dcd5-4bd7-9fd5-f2f66af5ff83"
>
</Parameter><Parameter
 Type="Messages.Q_LINKORIENTATION"
 Name="Q_LINKORIENTATION"
 Guid="85b64dac-da83-4cce-8c1b-30e5d8eba9ae"
>
</Parameter><Parameter
 Type="Messages.Q_LINKREACTION"
 Name="Q_LINKREACTION"
 Guid="2531bf20-6eba-423b-8f0a-20b954dedd93"
>
</Parameter><Parameter
 Type="Messages.Q_LOCACC"
 Name="Q_LOCACC"
 Guid="464a8847-ee60-4bc5-9eb6-7466864992bc"
>
</Parameter><Parameter
 Type="Messages.Q_SCALE"
 Name="Q_SCALE"
 Guid="b59713f6-2531-490c-96b0-383fcc726b05"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="26c7601d-ea48-4264-a247-cbc27a17b8af"
>
<Expression>LinkingData {
  Distance =&gt; MessageTypes.QScaleDistance ( distance =&gt; D_LINK, scale =&gt; Q_SCALE ),
  BaliseGroupIdentifier =&gt; NID_BG,
  Orientation =&gt; LinkingOrientationConverter ( Q_LINKORIENTATION ),
  Reaction =&gt; ConvertLinkingReaction ( Q_LINKREACTION ),
  LocationAccuracy =&gt; MessageTypes.QLocAccLength(Q_LOCACC)
}</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="170"
 Y="30"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="CurrentBGWithinFrame"
 Guid="e4b951d5-e364-4b31-a4e0-c6ad0e6fea3c"
>
<ReqRef
 Id="c534dda4-ea81-40b7-a27b-c229e935a20e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7d5dab54-1715-44d8-8a3f-98c74db7452d"
>
<Comment></Comment>
</ReqRef><ReqRef
 Id="75b64f27-a0f0-421e-a6c1-37f2dd27860f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="71528ab1-6044-469d-b298-a834a774d51f"
>
<Comment></Comment>
</ReqRef><ReqRef
 Id="6edb366e-d115-4216-b96e-7b30170c1b1b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="770da8b0-963b-4b05-9d57-4d7e0e76ccce"
>
</ReqRef><ReqRef
 Id="997012e6-1938-4ed6-b9fe-4a696ee0c30f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f45d8422-4e60-46f0-915f-f9818ea06e4a"
>
</ReqRef><ReqRef
 Id="7ec28cec-f043-4430-802b-8219033d9a4f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3d4dd045-e473-43eb-b7c4-b8b510aac76d"
>
</ReqRef><Comment>Returns true if the current BaliseGroup is linked + stored in our Linking database and within reach of the onboard antenna</Comment>
<Cases>
<Case
 Name="Expectation window for Unknown BG ID"
 Guid="4a644f5f-09fa-4cf8-868e-62d0f628f3c7"
>
<Comment>Implementation of 3.4.4.4.4: Only take into account the end location of the frame for BGs marked as UNKNOWN</Comment>
<PreConditions>
<PreCondition
 Guid="2425f7be-2891-4d2c-a000-e3d04864b4b4"
>(FIRST_IN Linkings).BaliseGroupIdentifier == Messages.NID_BG.NID_UNKNOWN</PreCondition></PreConditions>
<Expression>BGLocationReference.Position - BGLocationReference.OverReadingAmountOdo &lt;= (FIRST_IN Linkings).Distance + (FIRST_IN Linkings).LocationAccuracy</Expression>
</Case><Case
 Name="Check the expectation window"
 Guid="0bfe0cf6-52e4-46b8-a258-00e1f3aa67c4"
>
<Expression>(BGLocationReference.Position + BGLocationReference.UnderReadingAmountOdo &gt;= (FIRST_IN Linkings).Distance - (FIRST_IN Linkings).LocationAccuracy)
AND
(BGLocationReference.Position - BGLocationReference.OverReadingAmountOdo &lt;= (FIRST_IN Linkings).Distance + (FIRST_IN Linkings).LocationAccuracy)</Expression>
</Case></Cases>
</Function><Function
 Type="LinkingData"
 Default=""
 X="60"
 Y="30"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Verified="TRUE"
 Name="CurrentLinking"
 Guid="acaf4d09-047a-41bf-aadd-b6f94c59d499"
>
<ReqRef
 Id="370bc14e-630a-4f72-87f6-54e50015825c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7c2cb43c-38b6-4186-bfaf-8cd30db606a1"
>
</ReqRef><Comment>Provides the linking info currently active</Comment>
<Cases>
<Case
 Name="Always"
 Guid="e255898c-ca83-4e9a-9a4c-b2b8446fe98b"
>
<Expression>FIRST_IN Linkings</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="280"
 Y="30"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Verified="TRUE"
 Name="BGIsUnknownWithRepositioningPacketValidForDirection"
 Guid="f1956475-bc3e-42b6-a350-bba0af01c996"
>
<ReqRef
 Id="e5ef2878-8ec2-4b95-9b91-af8274b231b1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2601acf9-4290-4a93-b9e8-08bf7ca23a35"
>
</ReqRef><ReqRef
 Id="15cc1ee9-1be0-4256-a588-5dd0831c0f97"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="88fcfe42-627b-4b9c-b0a7-d1faefab323c"
>
</ReqRef><ReqRef
 Id="efb1d7b7-401e-46ab-93ac-645f2bc80a33"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4d5f91ee-cebb-4dad-9338-3d62421061cc"
>
</ReqRef><ReqRef
 Id="81bbc248-7c0b-473e-a3ec-e9178c2ce88d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a1712ccf-85aa-470d-bfd3-b771d07df98e"
>
</ReqRef><ReqRef
 Id="62aa6f8e-f444-4ed1-90b7-43dc64aa7594"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e116f214-8a36-47ae-9086-575c7db05195"
>
</ReqRef><ReqRef
 Id="203ab365-30f2-4d89-bf31-72cc5c007972"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="da1eb59e-f13c-4a97-b6aa-45b539db349f"
>
</ReqRef><ReqRef
 Id="572df3cf-8b3b-4e6d-b78e-c0ff6690a2cb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="05114846-8886-40e7-9147-4b7339d43065"
>
</ReqRef><Comment>If the current balise group was announced by linking as &quot;unknown&quot;, then it will only be considered if it contains the repositioning information valid for the train orientation.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="a793ac49-0e4c-4a69-8191-d2bc8465948a"
>
<Expression>CurrentLinking().BaliseGroupIdentifier == Messages.NID_BG.NID_UNKNOWN
  AND
THERE_IS_IN CurrentBaliseGroup | TelegramContainsRepositioningInformation ( X )
  AND
BaliseGroupOrientation() == CurrentLinking().Orientation</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Distance"
 Default=""
 X="60"
 Y="90"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="DistanceToBaliseGroup"
 Guid="41641768-ba85-4244-bd62-229f518ee854"
>
<Comment>Returns the distance to the balise group identifed by NID_BG as it was transmitted in the original Linking-message.</Comment>
<Parameters>
<Parameter
 Type="Messages.NID_BG"
 Name="NID_BG"
 Guid="82612927-96c8-4e91-8f44-d52409c9459b"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Information available"
 Guid="3620223c-87f1-4692-b00b-0637557e3fd4"
>
<PreConditions>
<PreCondition
 Guid="18f99ebe-a473-4db4-b373-7e63ff5fd10e"
>THERE_IS_IN Linkings | X.BaliseGroupIdentifier == NID_BG</PreCondition></PreConditions>
<Expression>( FIRST_IN Linkings | X.BaliseGroupIdentifier == NID_BG ).Distance</Expression>
</Case><Case
 Name="No information available"
 Guid="d73efdcf-cfd4-445a-8b37-24b05899772b"
>
<Expression>BaseTypes.Distance.Unknown</Expression>
</Case></Cases>
</Function><Function
 Type="LinkingReaction"
 Default=""
 X="60"
 Y="210"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Verified="TRUE"
 Name="ConvertLinkingReaction"
 Guid="12700441-18c7-4250-a53f-f0842c6dab09"
>
<ReqRef
 Id="e301f9da-607b-45f9-a74b-a6d53cbfc408"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9f17a1ad-de2f-4ed9-a877-fb85f863c64a"
>
</ReqRef><Comment>Converter to fill BTM.Linking.Linkings with proper LinkingReactions</Comment>
<Parameters>
<Parameter
 Type="Messages.Q_LINKREACTION"
 Name="Reaction"
 Guid="be50b670-57fd-467a-9378-20a7ca5d3552"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="No reaction"
 Guid="9f86a12b-f939-4701-8ce0-c3fec2a3e05a"
>
<PreConditions>
<PreCondition
 Guid="b9f9d11b-dd86-4911-ae4b-32f0f2c96f5c"
>Reaction == Messages.Q_LINKREACTION.No_Reaction</PreCondition></PreConditions>
<Expression>LinkingReaction.NoReaction</Expression>
</Case><Case
 Name="Train trip"
 Guid="cf6aecef-840e-46a0-81c3-e291b215cbf5"
>
<PreConditions>
<PreCondition
 Guid="b797bdaf-1d2c-4e61-ac26-8023128b8204"
>Reaction == Messages.Q_LINKREACTION.Train_trip</PreCondition></PreConditions>
<Expression>LinkingReaction.TrainTrip</Expression>
</Case><Case
 Name="Command service brake"
 Guid="69ab0520-e824-4eea-97e0-f52ae7762222"
>
<PreConditions>
<PreCondition
 Guid="4e4c51f8-7348-4d86-8258-848629f8b003"
>Reaction == Messages.Q_LINKREACTION.Apply_service_brake</PreCondition></PreConditions>
<Expression>LinkingReaction.CommandServiceBrake</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="170"
 Y="90"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="LinkingApplicable"
 Guid="2d83fff9-37ec-4fbe-9060-54191f0078ad"
>
<ReqRef
 Id="3ab48b20-0a96-4f02-93ac-64071624c979"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a2d0a89a-5d92-4cc4-9336-0315918fbb63"
>
</ReqRef><Comment>Returns true if &quot;Linking information is used&quot; 

Justification: This simple function can be used here since the update of available linkings is done in BTM.HandleBaliseMessage.Clear linking information</Comment>
<Cases>
<Case
 Name="Yes"
 Guid="748aed41-c3ac-445b-bd0a-2eb300d6b520"
>
<PreConditions>
<PreCondition
 Guid="724efeca-0f8b-468c-b945-1d780a28c811"
>Linkings != []</PreCondition></PreConditions>
<Expression>Boolean.True</Expression>
</Case><Case
 Name="Otherwise"
 Guid="6f2947ab-680b-4f75-8593-5caa93ea57c4"
>
<Expression>Boolean.False</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="280"
 Y="150"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="CurrentBGIsLinked"
 Guid="9e18ed01-8872-48ce-ad92-cf3ad4f6b5f9"
>
<ReqRef
 Id="c2167b58-3dec-449f-be34-ebe09320d97b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e237d1bd-bdb4-468e-866c-0a86059c8158"
>
</ReqRef><Comment>Returns true if the Current Balise Group is linked

FORALL_IN is defensive programming; if the Collection does not have the same values for Q_LINK in all Telegrams, the Message should not have been accepted in the first place (§3.16.2.4.1/c, §3.16.2.4.4/c, §3.16.2.5.1/c)</Comment>
<Cases>
<Case
 Name="Value"
 Guid="10d7ba53-fe0f-4e69-b2f8-e74a576996b1"
>
<Expression>FORALL_IN CurrentBaliseGroup | X.Q_LINK == Messages.Q_LINK.Linked</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="170"
 Y="150"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="ConsiderUnlinkedBG"
 Guid="dfd8d051-1d51-408f-bb7b-11e260f03e0c"
>
<ReqRef
 Id="17cdeaca-a795-4ae1-b38f-adb2b3ece625"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4ace0d8a-5450-4e81-a56a-4858fbdf2225"
>
</ReqRef><Comment>Special case of ConsiderBG(). Returns true if the current BG is unlinked but has to be considered, nevertheless.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="7a5fb781-d47d-4183-85ce-e677f5830885"
>
<Expression>NOT CurrentBGIsLinked()
  AND
(COUNT CurrentBaliseGroup) &gt;= 2</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="280"
 Y="90"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="BGIdentityIsValid"
 Guid="736c1e29-e6c1-4329-9a11-181c45d8baa8"
>
<ReqRef
 Id="2bc225fc-8bc7-49ee-a452-094ceb010716"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="532def12-426b-48ac-9413-2795373e77f8"
>
</ReqRef><ReqRef
 Id="45b975c5-6f3a-47c9-9f18-741bdd280f36"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a48c851e-877d-4fad-b7b5-f72c210ad634"
>
</ReqRef><Comment>Verifies that the identifier of the current BG was announced by the linking (or that the linking has announced that the following balise group&apos;s identifier is unknown).</Comment>
<Cases>
<Case
 Name="Value"
 Guid="1389d65e-f43e-4c52-bbc2-a0b9bff9a25c"
>
<Expression>THERE_IS_IN Linkings | X.BaliseGroupIdentifier == (FIRST_IN CurrentBaliseGroup).NID_BG</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="60"
 Y="150"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="TelegramContainsRepositioningInformation"
 Guid="9182d2c5-6efd-4550-ab3d-aac0b5fe4935"
>
<ReqRef
 Id="e5ef2878-8ec2-4b95-9b91-af8274b231b1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="68cae0cf-e2a5-4407-b80c-a08c7537dd8e"
>
</ReqRef><Comment>Indicates if a balise telegram provided as parameter contains a packet with repositioning information.</Comment>
<Parameters>
<Parameter
 Type="Messages.EUROBALISE.Message"
 Name="Message"
 Guid="f0bd316f-cdcd-41eb-8a6a-cf4007997b85"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="efbb6e0b-2160-4e54-acf9-98923bf5abab"
>
<Expression>THERE_IS_IN Message.Sequence1 | ConsiderPacket ( PacketOrientation =&gt; X.TRACK_TO_TRAIN.REPOSITIONING_INFORMATION.Q_DIR)</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="280"
 Y="210"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="ConsistencyError"
 Guid="de79a9cc-73a2-4121-a5ba-eca8a13d75f2"
>
<ReqRef
 Id="0547edfa-b17d-4b79-8cad-2fba135b2d95"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="496b2144-20a6-48db-8cbc-b2372ae80ee3"
>
</ReqRef><ReqRef
 Id="572df3cf-8b3b-4e6d-b78e-c0ff6690a2cb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5b7ed145-02e6-4aa7-b962-a858e2003488"
>
</ReqRef><ReqRef
 Id="7e2eedb2-843c-49cc-baec-39383388af08"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="577f8480-5809-42a0-8da6-54e5f0887cdf"
>
</ReqRef><Comment>Returns true if there is a linking consistency error with the BG</Comment>
<Cases>
<Case
 Name="BG encountered before expectation window"
 Guid="f75ed45e-36a7-4447-9107-f0fd905886ed"
>
<Comment>The location reference of the linked BG is found before its expectation window, corresponding to req. 3.16.2.3.1.a)</Comment>
<PreConditions>
<PreCondition
 Guid="9395d930-3de6-407a-9481-58901353982a"
>( (FIRST_IN CurrentBaliseGroup).NID_BG == (FIRST_IN Linkings).BaliseGroupIdentifier)
  AND  
(BGLocationReference.Position + BGLocationReference.UnderReadingAmountOdo &lt; (FIRST_IN Linkings).Distance - (FIRST_IN Linkings).LocationAccuracy)</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="BG encountered after expectation window"
 Guid="00b17942-d650-4e86-8076-43a6e460ab8d"
>
<Comment>The location reference of the expected BG is found after the end of its expectation window, corresponding to req. 3.16.2.3.1.b)...</Comment>
<PreConditions>
<PreCondition
 Guid="1ca081c2-aa92-4133-9d3f-f95d293eff35"
>( (FIRST_IN CurrentBaliseGroup).NID_BG == (FIRST_IN Linkings).BaliseGroupIdentifier)
  AND  
(BGLocationReference.Position - BGLocationReference.OverReadingAmountOdo &gt; (FIRST_IN Linkings).Distance + (FIRST_IN Linkings).LocationAccuracy)</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Later BG found first"
 Guid="dba1d2b8-aea3-4fe4-941e-b73d8398de2e"
>
<Comment>The detected BG is announced, but it is in the expectation window of a previous announced BG, corresponding to req. 3.16.2.3.1.c)</Comment>
<PreConditions>
<PreCondition
 Guid="eefad305-9f3a-4973-a898-0f076af71e89"
>(THERE_IS_IN Linkings | 
    ((X != FIRST_IN Linkings) AND ( (FIRST_IN CurrentBaliseGroup).NID_BG == X.BaliseGroupIdentifier))
)
  AND  
CurrentBGWithinFrame()</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Otherwise"
 Guid="dcf583f1-b5ed-4a68-a8eb-3b35040387c8"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="390"
 Y="30"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="BGOrientationIsValid"
 Guid="f13ce9c3-8102-404b-9859-179d2c0824fd"
>
<ReqRef
 Id="3520c91c-8938-4bdf-b683-bc1fd7071fd7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2c593eb4-f871-46d1-a458-2abaee58f52a"
>
</ReqRef><Comment>Returns True if the announced BG&apos;s orientation matches the expected orientation</Comment>
<Cases>
<Case
 Name="Value"
 Guid="e8cfc917-3918-4465-9013-4236335bcc82"
>
<Expression>CurrentLinking().Orientation == BTM.BaliseGroupOrientation()</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="390"
 Y="90"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="ConsiderBGWithoutLinking"
 Guid="4ebe43f9-4084-42e5-9c71-54b4123a39a3"
>
<ReqRef
 Id="22b29a34-8fe5-4ccc-9aec-f79479570714"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d5812c72-2df4-4fdd-bc3d-e098685c0fc8"
>
</ReqRef><ReqRef
 Id="45b975c5-6f3a-47c9-9f18-741bdd280f36"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="68901a58-e8fa-4e41-b5f7-a31e93997ee5"
>
</ReqRef><Comment>Returns True if the train has no linking information or if the current BG is unlinked</Comment>
<Cases>
<Case
 Name="Linking is not available"
 Guid="8d2dfd52-2927-4629-86f7-9087a69a8526"
>
<Comment>All balises are considered is there is no available linking information</Comment>
<PreConditions>
<PreCondition
 Guid="e040f6c2-c332-4606-a318-5857e2bb8ef9"
>Linkings == []</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Message is Unlinked"
 Guid="5f8fc683-07db-412a-9260-1227ccc38dd3"
>
<PreConditions>
<PreCondition
 Guid="36ca612a-201d-450b-971d-11450853b5f9"
>ConsiderUnlinkedBG()</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Otherwise"
 Guid="da49d6ff-7aea-44fd-b4f4-99a7ef246a31"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="390"
 Y="150"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="ConsiderBGWithLinking"
 Guid="d0a2ce43-1128-4658-89f2-e65df01f1238"
>
<ReqRef
 Id="15cc1ee9-1be0-4256-a588-5dd0831c0f97"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="446a1ac7-d501-45d4-ada5-5b4121de76fd"
>
</ReqRef><ReqRef
 Id="45b975c5-6f3a-47c9-9f18-741bdd280f36"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0b6cb14b-3b77-443c-94b7-8b8b634e8438"
>
</ReqRef><ReqRef
 Id="62aa6f8e-f444-4ed1-90b7-43dc64aa7594"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="819c48ce-8cbf-4305-b83e-f747c8196b4b"
>
</ReqRef><Comment>Returns True if the current BG is linked and announced</Comment>
<Cases>
<Case
 Name="Current BG linked and announced"
 Guid="54f3f434-61f2-4ee5-9648-c6727de839f9"
>
<Expression>(LinkingApplicable())
  AND  
(CurrentBGIsLinked())
  AND  
( BGIdentityIsValid()
    OR  
  BGIsUnknownWithRepositioningPacketValidForDirection() )</Expression>
</Case></Cases>
</Function></Functions>
<Procedures>
<Procedure
 X="640"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="LinkingInformationReceived"
 Guid="b36d74ff-248d-4a64-ad82-dc33020344e9"
>
<ReqRef
 Id="5e8ed861-509f-4d98-8c04-8bea3a8cd6c6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f7ca3ea4-f1bb-4242-8e5c-8e8f40ff836f"
>
</ReqRef><Comment>Handles the reception of linking information and stores it in internal variables.</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.LINKING.Message"
 Name="Packet"
 Guid="17d1099f-0a5e-4c5b-9b88-a0edee76fd61"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="ClearLinkingInformation"
 Guid="791123e1-19db-4836-99d0-16e17500fdef"
>
<Comment>Clears the previous linking information.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 Name="No infill, remove old information"
 Guid="7178bbc3-25d9-45a5-af00-1a77a210bae3"
>
<ReqRef
 Id="d98529ca-fda7-480c-8c31-33ce08d1b140"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9f6d2d00-0d68-434d-8d7a-a5c39e2dd1c1"
>
</ReqRef><ReqRef
 Id="1cb531d4-2809-484c-bf3f-445bebb332ef"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="843b436c-8500-4679-a447-5cd90dacff45"
>
</ReqRef><Comment>In case the new linking information is not an infill data, all the previous information is cleared.</Comment>
<PreConditions>
<PreCondition
 Guid="16d28157-dce0-492f-a815-20adf48b5991"
>Kernel.Infill.Data == EMPTY</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f4ed0c9f-1c84-4195-bc54-3ce40d23cbb2"
>Linkings &lt;- []</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Infill, remove information after infill location"
 Guid="40ced0d3-c8a9-40b2-9ad4-699d0a45700a"
>
<ReqRef
 Id="f0ea8f90-356c-47de-a7fd-4827ae488f00"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9a065f3d-c980-4476-b0b6-b48e1435e101"
>
</ReqRef><ReqRef
 Id="1cb531d4-2809-484c-bf3f-445bebb332ef"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="48467b6c-4fc4-46fa-88cf-82fe5f53ca67"
>
</ReqRef><Comment>In case the new linking information is an infill data, only the elements beyond the infill location are removed.</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="739997f0-0a9a-42ec-8b3b-8856cdc14a17"
>Linkings &lt;- MAP Linkings | X.Distance &lt; BTM.Linking.DistanceToBaliseGroup ( Kernel.Infill.Data.NID_BG  ) USING X</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Insert first BG"
 Guid="0e93289c-ce01-44bf-bc80-89c125862c2a"
>
<Comment>Since the first element is not situated in a collection, it has to be inserted separately.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Insert first BG"
 Guid="851988ba-8bf9-43c5-a92c-263c4fbd2700"
>
<Comment></Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="6ebb24f5-be8d-4df6-87cd-5edc20ff3c03"
>INSERT CreateLinkingData (
  D_LINK =&gt; Packet.D_LINK,
  NID_BG =&gt; Packet.NID_BG,
  Q_LINKORIENTATION =&gt; Packet.Q_LINKORIENTATION,
  Q_LINKREACTION =&gt; Packet.Q_LINKREACTION,
  Q_LOCACC =&gt; Packet.Q_LOCACC,
  Q_SCALE =&gt; Packet.Q_SCALE
)
IN Linkings</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Insert following BGs"
 Guid="278d8d73-6889-44f1-a3c7-b443ef0f9393"
>
<Comment>The following elements are inserted with APPLY operator.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Insert following BGs"
 Guid="f1abce2e-96f2-4d8b-aa83-e5fd2939fb4d"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="f313372b-6e45-44c5-a16a-2f82708636c7"
>APPLY StoreLinkingInfo ( Data =&gt; X, Q_SCALE =&gt; Packet.Q_SCALE ) ON Packet.Sequence1</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="750"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="StoreLinkingInfo"
 Guid="4a96e2f2-1676-4283-8150-5dcce152b97a"
>
<Comment>Stores a linking information in the list of available linking informations.</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.LINKING.SubStructure1"
 Name="Data"
 Guid="d22702d1-0c8b-41d3-8f99-53dd485e6de2"
>
</Parameter><Parameter
 Type="Messages.Q_SCALE"
 Name="Q_SCALE"
 Guid="e11ef72f-1a5b-4cab-abc1-3c72da4a2bef"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="Store info"
 Guid="e3791398-80a4-4ee3-a141-a8768935d3ff"
>
<Comment>Stores a linking information in the list of available linking informations.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Store info"
 Guid="6b6695bd-d089-4fdd-9e17-1592ec146539"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="0a7cfd2c-c2e7-4059-9963-dca8b4dc0007"
>INSERT CreateLinkingData (
  D_LINK =&gt; Data.D_LINK,
  NID_BG =&gt; Data.NID_BG,
  Q_LINKORIENTATION =&gt; Data.Q_LINKORIENTATION,
  Q_LINKREACTION =&gt; Data.Q_LINKREACTION,
  Q_LOCACC =&gt; Data.Q_LOCACC,
  Q_SCALE =&gt; Q_SCALE
) 
IN Linkings</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="860"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="StopExpectingCurrentBG"
 Guid="daa0e49f-223d-401a-b2e6-4c43a5fed628"
>
<ReqRef
 Id="b431b905-df98-4c23-9ff8-3da3b92a7a29"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="70edeac1-29cf-4a67-a25d-a8bb10e21bd7"
>
</ReqRef><ReqRef
 Id="259e3c43-f68a-4c80-8402-32349f27172d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="34f2596f-54be-4597-bd2c-07f7ad17bc75"
>
</ReqRef><Comment>BGs are only considered in the order the linking was given to the train. This means that only the first element should ever be deleted.
This function is called whenever it is appropriate, so it does not need any preconditions to its action.</Comment>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Stop expecting current BG"
 Guid="662b3dc5-53fd-490d-9fa5-d31299970ac2"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Stop expecting current BG"
 Guid="09f3424d-b8ae-43d8-904d-a185c3e22c58"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="f5e1d966-d547-4ac0-9400-f7ab8627a792"
>REMOVE ALL (X == FIRST_IN Linkings)
  IN Linkings</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="640"
 Y="60"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="ApplyLinkingReaction"
 Guid="6ec21532-1ddc-4a6e-81f8-749ef96463da"
>
<ReqRef
 Id="a58464f1-c74b-420f-ad30-03d671b764c8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4d57e55f-a085-43be-bf91-2bba7177339b"
>
</ReqRef><ReqRef
 Id="e301f9da-607b-45f9-a74b-a6d53cbfc408"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3e6d3dc8-dd65-4727-bbf7-01e58c414f9b"
>
</ReqRef><ReqRef
 Id="277ee440-7786-4aac-8364-7e60a82e94a1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="34595bf7-d0da-4fc1-96fd-b215075ebcf4"
>
</ReqRef><ReqRef
 Id="52ed2710-9a35-46d3-9d62-825665d41e0d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="91bdbfd2-34e5-4202-90ee-7b96a2db43f5"
>
</ReqRef><ReqRef
 Id="e529be25-15db-4250-b937-0f076614ae46"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7b2a0e8e-0483-4c77-bd46-b8ebf8c72509"
>
</ReqRef><ReqRef
 Id="b431b905-df98-4c23-9ff8-3da3b92a7a29"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="14476290-54b5-47b8-8662-e1632407f417"
>
</ReqRef><ReqRef
 Id="2c84de1b-61c3-4555-b485-6b4eae58ae90"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="289263a4-8987-4c9e-9cc7-6040fef1adfb"
>
</ReqRef><ReqRef
 Id="a0f4b0d4-ee6d-40d4-94b4-05dd94f6bcd2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cb7ed44c-27a7-469e-b15b-e24e7567ed69"
>
</ReqRef><Comment>Apply the prescribed reaction if there is a data consistency problem</Comment>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Apply linking reaction"
 Guid="b7705540-c896-4991-ac91-962e6c50429d"
>
<Comment>First, apply the linking reaction of the linked BG</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Service brake"
 Guid="91f4a7b1-c086-45e2-b630-7b518494ff43"
>
<ReqRef
 Id="52ed2710-9a35-46d3-9d62-825665d41e0d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c1fe9c45-0721-43c6-a471-701c705f41ba"
>
</ReqRef><Comment>Linking reaction: command service brake.</Comment>
<PreConditions>
<PreCondition
 Guid="225b3eaa-79f0-47b8-8242-2b45e9e0c7bf"
>CurrentLinking().Reaction == Linking.LinkingReaction.CommandServiceBrake</PreCondition></PreConditions>
<Actions>
<Action
 Guid="c25a0dde-94bd-4b8a-b757-7297f7ccdab2"
>Kernel.SpeedAndDistanceMonitoring.TriggerSBCommand()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Train trip"
 Guid="5dfb84c4-496e-4117-8cdc-1135596dbfc3"
>
<ReqRef
 Id="a0f4b0d4-ee6d-40d4-94b4-05dd94f6bcd2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dda3ddef-eebf-4f41-bdd0-3d9252e6dea4"
>
</ReqRef><ReqRef
 Id="277ee440-7786-4aac-8364-7e60a82e94a1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="872f330f-0838-473c-84f7-bb3c3f1f02dc"
>
</ReqRef><Comment>Linking reaction: train trip.</Comment>
<PreConditions>
<PreCondition
 Guid="d3c0f416-233f-434b-9809-11711134aff6"
>CurrentLinking().Reaction == Linking.LinkingReaction.TrainTrip</PreCondition></PreConditions>
<Actions>
<Action
 Guid="59e35c85-e437-4258-93af-28a87f6548e3"
>TrainTripDueToLinkingInconsistency &lt;- True</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Stop expecting the inconsistent BG"
 Guid="d28fd530-6d88-4aee-952e-4508fddee9da"
>
<Comment>Then stop expecting that BG</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Stop expecting the inconsistent BG"
 Guid="008d8432-2e3a-47d2-afeb-308763c39c36"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="3d1509f7-2827-41ac-8a3b-3b3057810dd2"
>StopExpectingCurrentBG()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="860"
 Y="60"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="CheckBGBeforeHandling"
 Guid="46db880c-ef3f-4a0a-b4cc-e2d35ba556b3"
>
<ReqRef
 Id="689ab6d6-cac9-4667-86bf-c6be70fefd43"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a2e2fb3b-dd84-4c86-975b-7d6d3af82555"
>
</ReqRef><ReqRef
 Id="0547edfa-b17d-4b79-8cad-2fba135b2d95"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9bfafb88-420b-4da7-ae50-ac7cdb434667"
>
</ReqRef><ReqRef
 Id="3520c91c-8938-4bdf-b683-bc1fd7071fd7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7f50a28c-3294-45ec-abcf-f25872353706"
>
</ReqRef><ReqRef
 Id="572df3cf-8b3b-4e6d-b78e-c0ff6690a2cb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ac81e337-d784-4e3c-b81e-61c4aaace7bc"
>
</ReqRef><ReqRef
 Id="85c84a18-90d4-4035-90e4-abdba8729120"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9f39e6f1-1c6f-4d49-9449-091b5b6c69fa"
>
</ReqRef><ReqRef
 Id="2c84de1b-61c3-4555-b485-6b4eae58ae90"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a7b061c3-553a-46fd-8d83-965b0dbe14b6"
>
</ReqRef><ReqRef
 Id="259e3c43-f68a-4c80-8402-32349f27172d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8ce9acea-5496-46cc-97b3-76aee8407b74"
>
</ReqRef><ReqRef
 Id="b431b905-df98-4c23-9ff8-3da3b92a7a29"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c83c7e94-95e6-475f-9d5c-b6aeeb0a46e4"
>
</ReqRef><ReqRef
 Id="370bc14e-630a-4f72-87f6-54e50015825c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e6a6c189-97f6-4f51-9956-420679e3fd16"
>
</ReqRef><ReqRef
 Id="22b29a34-8fe5-4ccc-9aec-f79479570714"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="65fc2a0c-20a8-4de3-8e5c-7ab2646c7aea"
>
</ReqRef><ReqRef
 Id="45b975c5-6f3a-47c9-9f18-741bdd280f36"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2e571b5d-7f6e-4706-b8d9-704cc4440866"
>
</ReqRef><Comment>Performs all the linking and linking consistency checks needed before a balise message is handled</Comment>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="No Linking"
 Guid="03c7adad-c5f2-4e0c-b75a-fc95323fbc0e"
>
<ReqRef
 Id="22b29a34-8fe5-4ccc-9aec-f79479570714"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="11686a8a-2e17-4465-98bb-16877dd16273"
>
</ReqRef><ReqRef
 Id="45b975c5-6f3a-47c9-9f18-741bdd280f36"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="613f2ef2-9b75-4bce-ab3b-9e42b280c042"
>
</ReqRef><Comment>This handles the case where there is no linking information available or the received message is unlinked</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="No Linking"
 Guid="1674753e-32b6-4435-b722-c9d87cf7a490"
>
<PreConditions>
<PreCondition
 Guid="e42b64dc-30a7-4d68-85ec-69e259afc79d"
>ConsiderBGWithoutLinking()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="da1b995b-2801-473b-9756-c1fe996e68d4"
>HandleBaliseMessage()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Linking"
 Guid="a34daf3f-5d78-4486-8a90-fbd006834d65"
>
<ReqRef
 Id="45b975c5-6f3a-47c9-9f18-741bdd280f36"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="351cc5da-9d13-4671-91f7-4626df77a1fd"
>
</ReqRef><Comment>Linking is being used and the current BG is linked</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Linking"
 Guid="44f432c7-3c22-4907-ac59-75fb41010478"
>
<PreConditions>
<PreCondition
 Guid="5f6b30d6-5215-4d2b-bd11-4191bbad5d7f"
>ConsiderBGWithLinking()</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Linking consistency"
 Guid="fe7b358e-e6db-40dd-a1da-f91ccb48aa66"
>
<ReqRef
 Id="0547edfa-b17d-4b79-8cad-2fba135b2d95"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="55293400-a7f5-4956-a033-2e9096f7b0e9"
>
</ReqRef><ReqRef
 Id="3520c91c-8938-4bdf-b683-bc1fd7071fd7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e3f1793b-11f7-4795-8bce-77cca8e969ce"
>
</ReqRef><Comment>Check that the linking consistency information is all valid and act accordingly</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="No linking consistency errors"
 Guid="92ae5112-1d17-470b-8deb-cde67e73ab4e"
>
<Comment>Linking consistency is OK
If the BG was passed in the right direction, handle the message. If not, the train will be tripped (as a mode transition, no need to specify that here)</Comment>
<PreConditions>
<PreCondition
 Guid="64a649af-e04e-4e87-9f05-10155fb800fd"
>NOT ConsistencyError()</PreCondition><PreCondition
 Guid="8a07516f-5e49-4e7f-9fb9-ca69da857f66"
>BGOrientationIsValid()</PreCondition><PreCondition
 Guid="ece8fce6-b40d-40dc-bf42-8979cd157cb4"
>ConsiderBGWithLinking()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="6f9ef685-68b5-4cf8-ab5b-fe3765ff7cb1"
>HandleBaliseMessage()</Action><Action
 Guid="73f60427-194a-4f61-9082-16f71fa2409d"
>StopExpectingCurrentBG()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="There is an error in the linking consistency of the current BG"
 Guid="eb7ab073-eb3e-4a3f-99bb-2227d1147a1b"
>
<Comment>If the received, linked BG is the next one expected, its message can still be accepted</Comment>
<PreConditions>
<PreCondition
 Guid="55a61f56-5d3b-4c7d-8122-989e234d8234"
>ConsistencyError()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="d500b496-dbe7-4910-a496-022d1d5989a4"
>ApplyLinkingReaction()</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Action depends on the type of linking consistency error"
 Guid="156f49ae-60a2-4118-ad8e-42febd1b45df"
>
<Comment>If the BG is not found in its expectation window, reject the message (so do nothing). If the wrong BG is found in the window, it&apos;s a little more complicated</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Early reception of a BG expected later"
 Guid="4da56af9-9b8a-454e-a404-65c99ce4372f"
>
<Comment>This is the application of req. 3.4.4.4.6.1</Comment>
<PreConditions>
<PreCondition
 Guid="5f012522-0de0-4446-8302-6097ee955f4d"
>(THERE_IS_IN Linkings | 
    ((X != FIRST_IN Linkings) AND ( (FIRST_IN CurrentBaliseGroup).NID_BG == X.BaliseGroupIdentifier))
)

  AND  

(NOT (THERE_IS_IN Linkings |
    ((X != FIRST_IN Linkings)
      AND  
    (X.Distance &lt; (REDUCE Linkings | (X.BaliseGroupIdentifier == (FIRST_IN CurrentBaliseGroup).NID_BG )
                            USING X.Distance
                           INITIAL_VALUE 0.0) )
    )
))</PreCondition></PreConditions>
<Actions>
<Action
 Guid="43a335c8-94a6-4436-82bc-a96910c20f5a"
>EarlyReception &lt;- True</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Linked BG received was not the first"
 Guid="b385214d-dfb9-43be-9f27-27202b5df4db"
>
<ReqRef
 Id="85c84a18-90d4-4035-90e4-abdba8729120"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cc2e363c-dc39-4fee-8d9b-390ce52f66be"
>
</ReqRef><Comment>If the received BG was linked and announced, but was not the first expected BG, check the second</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Linked BG received was not the first"
 Guid="f3bc2f76-4ee1-4eb9-927b-aaa9e0aadd29"
>
<PreConditions>
<PreCondition
 Guid="bde9f4d3-b94e-4029-992c-55ad6fda20d6"
>EarlyReception</PreCondition></PreConditions>
<Actions>
<Action
 Guid="1edfe423-26b8-44bf-ac53-0aac737c469b"
>EarlyReception &lt;- False</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Check the received BG was second"
 Guid="4a701008-3e27-4a98-9e83-7e2a7c31b9a1"
>
<Comment>If the BG received was announced to be just after the expected BG, check the linking consistency and handle the message accordingly</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Received BG was second expected"
 Guid="3884fc5e-0337-428f-bcfa-1b8b9486d329"
>
<PreConditions>
<PreCondition
 Guid="7e620188-f22c-418e-a368-8154fbdf1a1a"
>( (FIRST_IN Linkings).BaliseGroupIdentifier == (FIRST_IN CurrentBaliseGroup).NID_BG )
  AND
(NOT ConsistencyError() )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="df96badb-3bc3-40d3-b767-aa2ff7b5b2be"
>HandleBaliseMessage()</Action><Action
 Guid="dfd4bb34-7648-44dd-8e1c-13528b2072da"
>StopExpectingCurrentBG()</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure></Procedures>
<Variables>
<Variable
 Type="Linkings"
 DefaultValue="[]"
 VariableMode="Internal"
 X="500"
 Y="320"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="Linkings"
 Guid="0eba6fac-cb5c-4709-a3df-b9a398dedae4"
>
<ReqRef
 Id="4ae178ee-6db4-474c-aa88-d5f8bd8ea1d7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="04216c23-661e-417d-83f6-9414d867e5d3"
>
</ReqRef><ReqRef
 Id="5e8ed861-509f-4d98-8c04-8bea3a8cd6c6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b46e08a6-2387-4cc6-a9e0-55c6e04acb72"
>
</ReqRef><Comment>Stores the next linking data as provided by the balises</Comment>
</Variable><Variable
 Type="Boolean"
 DefaultValue=""
 VariableMode="Internal"
 X="260"
 Y="320"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="EarlyReception"
 Guid="a1513d6f-1d74-495a-aacc-e2a73cfc5ad0"
>
<Comment>Used when a received BG is the second one announced, and so should be handled after the expected BG&apos;s linking</Comment>
</Variable><Variable
 Type="Boolean"
 DefaultValue="False"
 VariableMode="Internal"
 X="380"
 Y="320"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="TrainTripDueToLinkingInconsistency"
 Guid="59b44451-8f40-4f77-9cd0-735dfe0b317b"
>
<ReqRef
 Id="a0f4b0d4-ee6d-40d4-94b4-05dd94f6bcd2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7bd42be7-80a5-4df1-b521-8ca1a2e61a97"
>
</ReqRef><Comment>Indicates that the train should be tripped due to a linking consistency error (mode transition condition 17)</Comment>
</Variable></Variables>
<Rules>
<Rule
 Priority="CleanUp"
 X="60"
 Y="510"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="CleanUpLinkingReaction"
 Guid="2e4fbfea-4178-41a0-82bf-73e46d001309"
>
<Comment>Resets the values of the linking reaction variable, TrainTripDurToLinkingInconsistency</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Train trip"
 Guid="98ca2a07-69e4-4b6f-b8e6-110f14c11cd5"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="a4712cfb-db0c-4f4d-bec4-dedbd6e4bb7a"
>TrainTripDueToLinkingInconsistency &lt;- False</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</NameSpace>
