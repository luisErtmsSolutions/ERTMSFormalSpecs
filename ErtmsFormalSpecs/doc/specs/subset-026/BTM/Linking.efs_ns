<NameSpace
 X="40"
 Y="610"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Name="Linking"
 Guid="9f9dab4e-f382-4269-bbaa-ca168d2a7aef"
>
<NameSpaces>
</NameSpaces>
<Enumerations>
<Enum
 Default="LinkingReaction.NoReaction"
 X="340"
 Y="510"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Verified="TRUE"
 Name="LinkingReaction"
 Guid="f89bae66-9581-4c14-a4f8-9f12da350a92"
>
<ReqRef
 Id="e301f9da-607b-45f9-a74b-a6d53cbfc408"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a2094d2d-a3eb-4e1e-b38b-a088532d2d9e"
>
</ReqRef><Comment>Possible reactions of the train in case of linking inconsistencies.</Comment>
<Values>
<EnumValue
 Value="0"
 Name="TrainTrip"
 Guid="898c135e-d06a-4f7e-98ff-8009406e13bb"
>
</EnumValue><EnumValue
 Value="1"
 Name="CommandServiceBrake"
 Guid="b3670cef-fc7d-4140-a5b1-ec4d3640881f"
>
</EnumValue><EnumValue
 Value="2"
 Name="NoReaction"
 Guid="02abe35f-2ec2-4f21-9966-7eb5b57a74f9"
>
</EnumValue></Values>
</Enum><Enum
 Default="LinkingErrorEnum.NoError"
 X="60"
 Y="450"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="LinkingErrorEnum"
 Guid="f7d0d40f-d131-4a41-9de0-67722abc8cdd"
>
<ReqRef
 Id="0547edfa-b17d-4b79-8cad-2fba135b2d95"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b905dced-bd8b-4cb5-9880-3144f855c46a"
>
</ReqRef><ReqRef
 Id="2a179500-0c97-46fb-975e-2dda45df541e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2a5eb809-9126-47e0-abdc-f5cf69268899"
>
</ReqRef><ReqRef
 Id="d5925ae4-bfc1-4822-9b11-3d735360e691"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2ff66124-7fb3-49b1-bc1f-e28f06963f90"
>
</ReqRef><ReqRef
 Id="ccf10657-245b-4fe0-a67e-320b3a3acd66"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ae0eca9c-d11e-48bb-8740-80fceb1fe82c"
>
</ReqRef><Comment>Possible errors</Comment>
<Values>
<EnumValue
 Value=""
 Name="WrongBG"
 Guid="d28df560-71ea-4994-88ca-9fc3c93c0857"
>
</EnumValue><EnumValue
 Value=""
 Name="ExpectationWindowEnd"
 Guid="b7d9e2cd-5067-4c43-8a64-3953d3178aee"
>
</EnumValue><EnumValue
 Value=""
 Name="BGEncounteredEarly"
 Guid="0f38fe09-296f-422e-af6b-f12ee7da4348"
>
</EnumValue><EnumValue
 Value=""
 Name="NoError"
 Guid="b298e405-020d-489f-8710-86019b0b17a9"
>
</EnumValue></Values>
</Enum></Enumerations>
<Structures>
<Structure
 Default=""
 X="500"
 Y="510"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="LinkingData"
 Guid="039faab4-39ea-4dfc-864e-e17bf3ad51d8"
>
<ReqRef
 Id="3da69521-ffba-42ec-9ded-f9c719a2f4b8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="747d463c-bc18-4d3b-a388-6f365db794cb"
>
</ReqRef><ReqRef
 Id="e249c65e-2618-4df7-b69d-97ced56922b4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2c703ad3-b20f-4adc-af9d-53ae8b083ccd"
>
</ReqRef><Comment>Represents the linking data provided by the trackside.</Comment>
<StructureElement
 TypeName="Default.BaseTypes.Length"
 Default="Default.BaseTypes.Length.NA"
 Mode="Internal"
 Implemented="TRUE"
 Verified="TRUE"
 Name="LocationAccuracy"
 Guid="48c30e83-0b8a-451f-a665-739572f17bf6"
>
<ReqRef
 Id="9e4c5ab1-4454-4b08-9df1-666cf07b17ca"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d6916b32-ed01-488d-84a8-d3926f454b8a"
>
</ReqRef><ReqRef
 Id="851ab4c7-24ed-4bb4-bcf0-18ffccc80fb7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e0079562-8765-46ed-9eab-9ae15ea5197e"
>
</ReqRef><Comment>Represents the location accuracy of balise groups.

Since this only stores what is inside Q_LOCACC (which can only be in the range of 0 to 63) it should be safe to use an ordinary length type here.</Comment>
</StructureElement><StructureElement
 TypeName="Default.Orientation"
 Default="Default.Orientation.Unknown"
 Mode="Internal"
 Implemented="TRUE"
 Verified="TRUE"
 Name="Orientation"
 Guid="7bd50dc0-9751-4f9d-bc2b-72dd001a71c7"
>
<ReqRef
 Id="c15a755a-0bef-44a2-b2b4-43d8f1bbf0ac"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ffb4ecc7-4cfa-422e-b110-a40a5e305211"
>
</ReqRef><ReqRef
 Id="764c6acf-d811-4c13-bcd5-727c1595ada6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9d2dd1a7-fafa-45ca-9013-03206ae2e422"
>
</ReqRef><Comment>Since this stores nothing but the value of Q_LINKORIENTATION (which can only be &quot;nominal&quot; or &quot;reverse&quot;) it should be safe to use Default.Orientation here which can also be of &quot;orientation:both&quot;, #morido, 14/01/15</Comment>
</StructureElement><StructureElement
 TypeName="LinkingReaction"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Verified="TRUE"
 Name="Reaction"
 Guid="b90a4eaf-0013-4c13-8680-c19360f2c1cc"
>
<ReqRef
 Id="a58464f1-c74b-420f-ad30-03d671b764c8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="366fe3be-7e89-4676-be57-6061e714d40d"
>
</ReqRef><ReqRef
 Id="e301f9da-607b-45f9-a74b-a6d53cbfc408"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="33274337-4d51-4ae8-8d28-5231155730c8"
>
</ReqRef><Comment>Reaction to be used in cas of data inconsistencies.</Comment>
</StructureElement><StructureElement
 TypeName="Default.BaseTypes.Distance"
 Default="Default.BaseTypes.Distance.Unknown"
 Mode="Internal"
 Implemented="TRUE"
 Verified="TRUE"
 Name="Distance"
 Guid="bb85ae8b-55aa-46b3-b105-bd724e471a44"
>
<ReqRef
 Id="54049463-080e-41b3-a9aa-83124d1f6471"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c76f1bf6-1c24-4965-9438-d0de5397f86a"
>
</ReqRef><Comment>Distance to the balise group identified by BaliseGroupIdentifier.</Comment>
</StructureElement><StructureElement
 TypeName="Messages.NID_BG"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Verified="TRUE"
 Name="BaliseGroupIdentifier"
 Guid="efde73d0-dee6-401b-b06e-d61b8454101c"
>
<ReqRef
 Id="091b5a23-8a4f-49d0-b23d-9a839b16be15"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fcb4bd9b-790f-490b-ace8-b9a0d5d86b2e"
>
</ReqRef><Comment>Identifier of the linked balise group.</Comment>
</StructureElement></Structure><Structure
 Default=""
 X="620"
 Y="420"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="RAMSSupervisionStruct"
 Guid="0bf11b83-db45-4b34-8b47-6bd23ef65f98"
>
<ReqRef
 Id="59827ecc-eb52-4d61-8c08-58aa70975eea"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b061e054-aaf6-4322-96c2-0ae89d858feb"
>
</ReqRef><Comment>Holds the balise ID and the end of the expectation window of the BG supervised by the RAMS supervision function.</Comment>
<StructureElement
 TypeName="Default.BaseTypes.Distance"
 Default="0.0"
 Mode="Internal"
 Implemented="TRUE"
 Name="EndOfWindow"
 Guid="b627bc7c-1528-4eac-bb56-540527b807ca"
>
<Comment>The location corresponding to the end of the expectation window for this BG.</Comment>
</StructureElement><StructureElement
 TypeName="Messages.NID_BG"
 Default="0"
 Mode="Internal"
 Implemented="TRUE"
 Name="Id"
 Guid="50db04e5-47f0-4b0c-a2fe-37f9502ff958"
>
<Comment>The NID_BG of the expected BG.</Comment>
</StructureElement></Structure></Structures>
<Collections>
<Collection
 TypeName="BTM.Linking.LinkingData"
 MaxSize="30"
 Default="[]"
 X="500"
 Y="420"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Verified="TRUE"
 Name="Linkings"
 Guid="48ad5ac5-7c08-40be-bbfe-3ec8f3f50e7d"
>
<ReqRef
 Id="4ab4eb51-5945-4fe4-aa12-eac7e8138282"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7c9afe0e-4a9b-4d5c-94ac-357c1cfaa428"
>
</ReqRef><Comment>Collection of Linking elements.</Comment>
</Collection></Collections>
<Functions>
<Function
 Type="BTM.Linking.LinkingData"
 Default=""
 X="170"
 Y="210"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="CreateLinkingData"
 Guid="e67dc131-7b89-4020-a3b6-525024b5593e"
>
<Comment>Create an element of Linking data for use in the BTM.Linkings variable</Comment>
<Parameters>
<Parameter
 Type="Default.MessageTypes.Distance"
 Name="D_LINK"
 Guid="c2792e76-3c01-4dd6-af5a-c30fde497bfe"
>
</Parameter><Parameter
 Type="Messages.NID_BG"
 Name="NID_BG"
 Guid="03cfe05a-dcd5-4bd7-9fd5-f2f66af5ff83"
>
</Parameter><Parameter
 Type="Messages.Q_LINKORIENTATION"
 Name="Q_LINKORIENTATION"
 Guid="85b64dac-da83-4cce-8c1b-30e5d8eba9ae"
>
</Parameter><Parameter
 Type="Messages.Q_LINKREACTION"
 Name="Q_LINKREACTION"
 Guid="2531bf20-6eba-423b-8f0a-20b954dedd93"
>
</Parameter><Parameter
 Type="Messages.Q_LOCACC"
 Name="Q_LOCACC"
 Guid="464a8847-ee60-4bc5-9eb6-7466864992bc"
>
</Parameter><Parameter
 Type="Messages.Q_SCALE"
 Name="Q_SCALE"
 Guid="b59713f6-2531-490c-96b0-383fcc726b05"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="26c7601d-ea48-4264-a247-cbc27a17b8af"
>
<Expression>BTM.Linking.LinkingData {
  Distance =&gt; Default.MessageTypes.QScaleDistance ( distance =&gt; D_LINK, scale =&gt; Q_SCALE ),
  BaliseGroupIdentifier =&gt; NID_BG,
  Orientation =&gt; Default.LinkingOrientationConverter ( Q_LINKORIENTATION ),
  Reaction =&gt; ConvertLinkingReaction ( Q_LINKREACTION ),
  LocationAccuracy =&gt; Default.MessageTypes.QLocAccLength(Q_LOCACC)
}</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="170"
 Y="30"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="CurrentBGWithinFrame"
 Guid="e4b951d5-e364-4b31-a4e0-c6ad0e6fea3c"
>
<ReqRef
 Id="c534dda4-ea81-40b7-a27b-c229e935a20e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7d5dab54-1715-44d8-8a3f-98c74db7452d"
>
</ReqRef><ReqRef
 Id="75b64f27-a0f0-421e-a6c1-37f2dd27860f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="71528ab1-6044-469d-b298-a834a774d51f"
>
</ReqRef><ReqRef
 Id="6edb366e-d115-4216-b96e-7b30170c1b1b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="770da8b0-963b-4b05-9d57-4d7e0e76ccce"
>
</ReqRef><ReqRef
 Id="997012e6-1938-4ed6-b9fe-4a696ee0c30f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f45d8422-4e60-46f0-915f-f9818ea06e4a"
>
</ReqRef><ReqRef
 Id="7ec28cec-f043-4430-802b-8219033d9a4f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e152e477-1c03-4d5e-8707-276952ce2016"
>
</ReqRef><Comment>Returns true if the current BaliseGroup is linked + stored in our Linking database and within reach of the onboard antenna</Comment>
<Cases>
<Case
 Name="Expectation window for Unknown BG ID"
 Guid="4a644f5f-09fa-4cf8-868e-62d0f628f3c7"
>
<Comment>Implementation of 3.4.4.4.4: Only take into account the end location of the frame for BGs marked as UNKNOWN</Comment>
<PreConditions>
<PreCondition
 Guid="2425f7be-2891-4d2c-a000-e3d04864b4b4"
>(FIRST X IN Linkings).BaliseGroupIdentifier == Messages.NID_BG.NID_UNKNOWN</PreCondition></PreConditions>
<Expression>BGLocationReference.Position.Position - BGLocationReference.Position.OverReadingAmountOdo &lt;= (FIRST X IN Linkings).Distance + (FIRST X IN Linkings).LocationAccuracy</Expression>
</Case><Case
 Name="Check the expectation window"
 Guid="0bfe0cf6-52e4-46b8-a258-00e1f3aa67c4"
>
<Expression>BGinExpectationWindow( FIRST X IN Linkings )</Expression>
</Case></Cases>
</Function><Function
 Type="BTM.Linking.LinkingData"
 Default=""
 X="60"
 Y="30"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Verified="TRUE"
 Name="CurrentLinking"
 Guid="acaf4d09-047a-41bf-aadd-b6f94c59d499"
>
<ReqRef
 Id="370bc14e-630a-4f72-87f6-54e50015825c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7c2cb43c-38b6-4186-bfaf-8cd30db606a1"
>
</ReqRef><Comment>Provides the linking info currently active</Comment>
<Cases>
<Case
 Name="Always"
 Guid="e255898c-ca83-4e9a-9a4c-b2b8446fe98b"
>
<Expression>FIRST X IN Linkings</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="280"
 Y="30"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Verified="TRUE"
 Name="BGIsUnknownWithRepositioningPacketValidForDirection"
 Guid="f1956475-bc3e-42b6-a350-bba0af01c996"
>
<ReqRef
 Id="e5ef2878-8ec2-4b95-9b91-af8274b231b1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2601acf9-4290-4a93-b9e8-08bf7ca23a35"
>
</ReqRef><ReqRef
 Id="15cc1ee9-1be0-4256-a588-5dd0831c0f97"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="88fcfe42-627b-4b9c-b0a7-d1faefab323c"
>
</ReqRef><ReqRef
 Id="efb1d7b7-401e-46ab-93ac-645f2bc80a33"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4d5f91ee-cebb-4dad-9338-3d62421061cc"
>
</ReqRef><ReqRef
 Id="81bbc248-7c0b-473e-a3ec-e9178c2ce88d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a1712ccf-85aa-470d-bfd3-b771d07df98e"
>
</ReqRef><ReqRef
 Id="62aa6f8e-f444-4ed1-90b7-43dc64aa7594"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e116f214-8a36-47ae-9086-575c7db05195"
>
</ReqRef><ReqRef
 Id="203ab365-30f2-4d89-bf31-72cc5c007972"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="da1eb59e-f13c-4a97-b6aa-45b539db349f"
>
</ReqRef><ReqRef
 Id="572df3cf-8b3b-4e6d-b78e-c0ff6690a2cb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="05114846-8886-40e7-9147-4b7339d43065"
>
</ReqRef><ReqRef
 Id="21a0ae2b-0594-4a82-bcb1-13fdda48901c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="49a0f15f-753a-4b28-adc4-b971e6631605"
>
</ReqRef><Comment>If the current balise group was announced by linking as &quot;unknown&quot;, then it will only be considered if it contains the repositioning information valid for the train orientation.</Comment>
<Cases>
<Case
 Name="Check linking consistency"
 Guid="a793ac49-0e4c-4a69-8191-d2bc8465948a"
>
<PreConditions>
<PreCondition
 Guid="6d48fca6-212c-4d31-bab3-19b6f87595cc"
>Kernel.ActiveFunctions.CheckLinkingConsistency()</PreCondition></PreConditions>
<Expression>CurrentLinking().BaliseGroupIdentifier == Messages.NID_BG.NID_UNKNOWN
  AND
THERE_IS X IN CurrentBaliseGroup | TelegramContainsRepositioningInformation ( X.Telegram )
  AND
BaliseGroupOrientation() == CurrentLinking().Orientation</Expression>
</Case><Case
 Name="Otherwise"
 Guid="785236bb-e746-4b79-a351-c6484432eced"
>
<Expression>True</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Distance"
 Default=""
 X="60"
 Y="90"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="DistanceToBaliseGroup"
 Guid="41641768-ba85-4244-bd62-229f518ee854"
>
<Comment>Returns the distance to the balise group identifed by NID_BG as it was transmitted in the original Linking-message.</Comment>
<Parameters>
<Parameter
 Type="Messages.NID_BG"
 Name="NID_BG"
 Guid="82612927-96c8-4e91-8f44-d52409c9459b"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Information available"
 Guid="3620223c-87f1-4692-b00b-0637557e3fd4"
>
<PreConditions>
<PreCondition
 Guid="18f99ebe-a473-4db4-b373-7e63ff5fd10e"
>THERE_IS X IN Linkings | X.BaliseGroupIdentifier == NID_BG</PreCondition></PreConditions>
<Expression>( FIRST X IN Linkings | X.BaliseGroupIdentifier == NID_BG ).Distance</Expression>
</Case><Case
 Name="No information available"
 Guid="d73efdcf-cfd4-445a-8b37-24b05899772b"
>
<Expression>Default.BaseTypes.Distance.Unknown</Expression>
</Case></Cases>
</Function><Function
 Type="LinkingReaction"
 Default=""
 X="60"
 Y="210"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Verified="TRUE"
 Name="ConvertLinkingReaction"
 Guid="12700441-18c7-4250-a53f-f0842c6dab09"
>
<ReqRef
 Id="e301f9da-607b-45f9-a74b-a6d53cbfc408"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9f17a1ad-de2f-4ed9-a877-fb85f863c64a"
>
</ReqRef><Comment>Converter to fill BTM.Linking.Linkings with proper LinkingReactions</Comment>
<Parameters>
<Parameter
 Type="Messages.Q_LINKREACTION"
 Name="Reaction"
 Guid="be50b670-57fd-467a-9378-20a7ca5d3552"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="No reaction"
 Guid="9f86a12b-f939-4701-8ce0-c3fec2a3e05a"
>
<PreConditions>
<PreCondition
 Guid="b9f9d11b-dd86-4911-ae4b-32f0f2c96f5c"
>Reaction == Messages.Q_LINKREACTION.No_Reaction</PreCondition></PreConditions>
<Expression>LinkingReaction.NoReaction</Expression>
</Case><Case
 Name="Train trip"
 Guid="cf6aecef-840e-46a0-81c3-e291b215cbf5"
>
<PreConditions>
<PreCondition
 Guid="b797bdaf-1d2c-4e61-ac26-8023128b8204"
>Reaction == Messages.Q_LINKREACTION.Train_trip</PreCondition></PreConditions>
<Expression>LinkingReaction.TrainTrip</Expression>
</Case><Case
 Name="Command service brake"
 Guid="69ab0520-e824-4eea-97e0-f52ae7762222"
>
<PreConditions>
<PreCondition
 Guid="4e4c51f8-7348-4d86-8258-848629f8b003"
>Reaction == Messages.Q_LINKREACTION.Apply_service_brake</PreCondition></PreConditions>
<Expression>LinkingReaction.CommandServiceBrake</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="170"
 Y="90"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="LinkingApplicable"
 Guid="2d83fff9-37ec-4fbe-9060-54191f0078ad"
>
<ReqRef
 Id="3ab48b20-0a96-4f02-93ac-64071624c979"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a2d0a89a-5d92-4cc4-9336-0315918fbb63"
>
</ReqRef><Comment>Returns true if &quot;Linking information is used&quot; 

Justification: This simple function can be used here since the update of available linkings is done in BTM.HandleBaliseMessage.Clear linking information</Comment>
<Cases>
<Case
 Name="Yes"
 Guid="748aed41-c3ac-445b-bd0a-2eb300d6b520"
>
<PreConditions>
<PreCondition
 Guid="724efeca-0f8b-468c-b945-1d780a28c811"
>Linkings != []</PreCondition></PreConditions>
<Expression>Boolean.True</Expression>
</Case><Case
 Name="Otherwise"
 Guid="6f2947ab-680b-4f75-8593-5caa93ea57c4"
>
<Expression>Boolean.False</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="280"
 Y="150"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="CurrentBGIsLinked"
 Guid="9e18ed01-8872-48ce-ad92-cf3ad4f6b5f9"
>
<ReqRef
 Id="c2167b58-3dec-449f-be34-ebe09320d97b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e237d1bd-bdb4-468e-866c-0a86059c8158"
>
</ReqRef><Comment>Returns true if the Current Balise Group is linked

FORALL_IN is defensive programming; if the Collection does not have the same values for Q_LINK in all Telegrams, the Message should not have been accepted in the first place (§3.16.2.4.1/c, §3.16.2.4.4/c, §3.16.2.5.1/c)</Comment>
<Cases>
<Case
 Name="Value"
 Guid="10d7ba53-fe0f-4e69-b2f8-e74a576996b1"
>
<Expression>FORALL X IN CurrentBaliseGroup | X.Telegram.Q_LINK == Messages.Q_LINK.Linked</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="170"
 Y="150"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="ConsiderUnlinkedBG"
 Guid="dfd8d051-1d51-408f-bb7b-11e260f03e0c"
>
<ReqRef
 Id="17cdeaca-a795-4ae1-b38f-adb2b3ece625"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4ace0d8a-5450-4e81-a56a-4858fbdf2225"
>
</ReqRef><Comment>Special case of ConsiderBG(). Returns true if the current BG is unlinked but has to be considered, nevertheless.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="7a5fb781-d47d-4183-85ce-e677f5830885"
>
<Expression>NOT CurrentBGIsLinked()
  AND
(COUNT X IN CurrentBaliseGroup) &gt;= 2</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="280"
 Y="90"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="BGIdentityIsValid"
 Guid="736c1e29-e6c1-4329-9a11-181c45d8baa8"
>
<ReqRef
 Id="2bc225fc-8bc7-49ee-a452-094ceb010716"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="532def12-426b-48ac-9413-2795373e77f8"
>
</ReqRef><ReqRef
 Id="45b975c5-6f3a-47c9-9f18-741bdd280f36"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a48c851e-877d-4fad-b7b5-f72c210ad634"
>
</ReqRef><ReqRef
 Id="21a0ae2b-0594-4a82-bcb1-13fdda48901c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="071565c3-97a5-424f-a42e-cbf0777f632c"
>
</ReqRef><ReqRef
 Id="dc13fa0f-3c6b-42d8-a367-9de75248768d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="48985d3b-ea65-4129-a0d4-e89d0093552b"
>
</ReqRef><Comment>Verifies that the identifier of the current BG was announced by the linking (or that the linking has announced that the following balise group&apos;s identifier is unknown).</Comment>
<Cases>
<Case
 Name="Check linking consistency"
 Guid="1389d65e-f43e-4c52-bbc2-a0b9bff9a25c"
>
<PreConditions>
<PreCondition
 Guid="82df884c-19da-40cc-b3b1-5c5365462f5f"
>Kernel.ActiveFunctions.CheckLinkingConsistency()</PreCondition></PreConditions>
<Expression>THERE_IS X IN Linkings | X.BaliseGroupIdentifier == (FIRST X IN CurrentBaliseGroup).Telegram.NID_BG</Expression>
</Case><Case
 Name="Otherwise"
 Guid="09df7dbf-e9d8-4952-aa0d-0c4b26e9dd18"
>
<Expression>True</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="60"
 Y="150"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="TelegramContainsRepositioningInformation"
 Guid="9182d2c5-6efd-4550-ab3d-aac0b5fe4935"
>
<ReqRef
 Id="e5ef2878-8ec2-4b95-9b91-af8274b231b1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="68cae0cf-e2a5-4407-b80c-a08c7537dd8e"
>
</ReqRef><Comment>Indicates if a balise telegram provided as parameter contains a packet with repositioning information.</Comment>
<Parameters>
<Parameter
 Type="Messages.EUROBALISE.Message"
 Name="Message"
 Guid="f0bd316f-cdcd-41eb-8a6a-cf4007997b85"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="efbb6e0b-2160-4e54-acf9-98923bf5abab"
>
<Expression>THERE_IS X IN Message.Sequence1 | ConsiderPacket ( PacketOrientation =&gt; X.TRACK_TO_TRAIN.REPOSITIONING_INFORMATION.Q_DIR)</Expression>
</Case></Cases>
</Function><Function
 Type="BTM.Linking.LinkingErrorEnum"
 Default=""
 X="280"
 Y="210"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="ConsistencyError"
 Guid="de79a9cc-73a2-4121-a5ba-eca8a13d75f2"
>
<ReqRef
 Id="0547edfa-b17d-4b79-8cad-2fba135b2d95"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="496b2144-20a6-48db-8cbc-b2372ae80ee3"
>
</ReqRef><ReqRef
 Id="572df3cf-8b3b-4e6d-b78e-c0ff6690a2cb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5b7ed145-02e6-4aa7-b962-a858e2003488"
>
</ReqRef><ReqRef
 Id="7e2eedb2-843c-49cc-baec-39383388af08"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="577f8480-5809-42a0-8da6-54e5f0887cdf"
>
</ReqRef><ReqRef
 Id="2a179500-0c97-46fb-975e-2dda45df541e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4bb41d57-196c-433f-8649-2cd8e44b9ae3"
>
</ReqRef><ReqRef
 Id="d5925ae4-bfc1-4822-9b11-3d735360e691"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6a6e9ff3-53fb-482c-8669-e7770fc2f217"
>
</ReqRef><ReqRef
 Id="ccf10657-245b-4fe0-a67e-320b3a3acd66"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0b70602c-61bd-463a-9f13-183f6e08ea24"
>
</ReqRef><ReqRef
 Id="21a0ae2b-0594-4a82-bcb1-13fdda48901c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="22e18a0d-2808-49d0-be62-e0cf4ebba616"
>
</ReqRef><ReqRef
 Id="7ec28cec-f043-4430-802b-8219033d9a4f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fd3f8b1f-0d60-42bb-9f46-db9b0c2d1827"
>
</ReqRef><Comment>Returns true if there is a linking consistency error with the BG</Comment>
<Cases>
<Case
 Name="Do not check Linking consistency"
 Guid="f4ac2675-53c5-4283-a91c-176a224a1377"
>
<PreConditions>
<PreCondition
 Guid="ce09c9a6-abf0-436c-93bc-dc574f1e6d2c"
>NOT Kernel.ActiveFunctions.CheckLinkingConsistency()</PreCondition></PreConditions>
<Expression>LinkingErrorEnum.NoError</Expression>
</Case><Case
 Name="BG encountered outside expectation window"
 Guid="f75ed45e-36a7-4447-9107-f0fd905886ed"
>
<Comment>The location reference of the linked BG is found outside its expectation window, corresponding to reqs. 3.16.2.3.1.a) and 3.16.2.3.1.b)</Comment>
<PreConditions>
<PreCondition
 Guid="9395d930-3de6-407a-9481-58901353982a"
>(FIRST X IN CurrentBaliseGroup).Telegram.NID_BG == (FIRST X IN Linkings).BaliseGroupIdentifier
  AND  
NOT CurrentBGWithinFrame()</PreCondition></PreConditions>
<Expression>LinkingErrorEnum.BGEncounteredEarly</Expression>
</Case><Case
 Name="Later BG found first"
 Guid="dba1d2b8-aea3-4fe4-941e-b73d8398de2e"
>
<Comment>The detected BG is announced, but it is in the expectation window of a previous announced BG, corresponding to req. 3.16.2.3.1.c)</Comment>
<PreConditions>
<PreCondition
 Guid="eefad305-9f3a-4973-a898-0f076af71e89"
>THERE_IS X IN Linkings | 
    ((X != FIRST X IN Linkings) AND ( (FIRST X IN CurrentBaliseGroup).Telegram.NID_BG == X.BaliseGroupIdentifier))
  AND  
CurrentBGWithinFrame()</PreCondition></PreConditions>
<Expression>LinkingErrorEnum.WrongBG</Expression>
</Case><Case
 Name="Otherwise"
 Guid="dcf583f1-b5ed-4a68-a8eb-3b35040387c8"
>
<Expression>LinkingErrorEnum.NoError</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="390"
 Y="30"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="BGOrientationIsValid"
 Guid="f13ce9c3-8102-404b-9859-179d2c0824fd"
>
<ReqRef
 Id="3520c91c-8938-4bdf-b683-bc1fd7071fd7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2c593eb4-f871-46d1-a458-2abaee58f52a"
>
</ReqRef><ReqRef
 Id="9ffb7f56-2bd6-43f5-8def-6aac968df073"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6aac8dd4-9edd-47c7-acfb-f7219d224d2f"
>
</ReqRef><Comment>Returns True if the announced BG&apos;s orientation matches the expected orientation</Comment>
<Cases>
<Case
 Name="Value"
 Guid="e8cfc917-3918-4465-9013-4236335bcc82"
>
<Expression>CurrentLinking().Orientation == BaliseGroupOrientation()</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="390"
 Y="90"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="ConsiderBGWithoutLinking"
 Guid="4ebe43f9-4084-42e5-9c71-54b4123a39a3"
>
<ReqRef
 Id="22b29a34-8fe5-4ccc-9aec-f79479570714"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d5812c72-2df4-4fdd-bc3d-e098685c0fc8"
>
</ReqRef><ReqRef
 Id="45b975c5-6f3a-47c9-9f18-741bdd280f36"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="68901a58-e8fa-4e41-b5f7-a31e93997ee5"
>
</ReqRef><Comment>Returns True if the train has no linking information or if the current BG is unlinked</Comment>
<Cases>
<Case
 Name="Linking is not available"
 Guid="8d2dfd52-2927-4629-86f7-9087a69a8526"
>
<Comment>All balises are considered is there is no available linking information</Comment>
<PreConditions>
<PreCondition
 Guid="e040f6c2-c332-4606-a318-5857e2bb8ef9"
>Linkings == []</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Message is Unlinked"
 Guid="5f8fc683-07db-412a-9260-1227ccc38dd3"
>
<PreConditions>
<PreCondition
 Guid="36ca612a-201d-450b-971d-11450853b5f9"
>ConsiderUnlinkedBG()</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Otherwise"
 Guid="da49d6ff-7aea-44fd-b4f4-99a7ef246a31"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="390"
 Y="150"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="ConsiderBGWithLinking"
 Guid="d0a2ce43-1128-4658-89f2-e65df01f1238"
>
<ReqRef
 Id="15cc1ee9-1be0-4256-a588-5dd0831c0f97"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="446a1ac7-d501-45d4-ada5-5b4121de76fd"
>
</ReqRef><ReqRef
 Id="45b975c5-6f3a-47c9-9f18-741bdd280f36"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0b6cb14b-3b77-443c-94b7-8b8b634e8438"
>
</ReqRef><ReqRef
 Id="62aa6f8e-f444-4ed1-90b7-43dc64aa7594"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="819c48ce-8cbf-4305-b83e-f747c8196b4b"
>
</ReqRef><ReqRef
 Id="dc13fa0f-3c6b-42d8-a367-9de75248768d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c12cdcc0-b4fb-4d97-939d-5db6d594f159"
>
</ReqRef><Comment>Returns True if the current BG is linked and announced</Comment>
<Cases>
<Case
 Name="Current BG linked and announced"
 Guid="54f3f434-61f2-4ee5-9648-c6727de839f9"
>
<Expression>(LinkingApplicable())
  AND  
(CurrentBGIsLinked())
  AND  
( BGIdentityIsValid()
    OR  
  BGIsUnknownWithRepositioningPacketValidForDirection() )</Expression>
</Case></Cases>
</Function><Function
 Type="BTM.Linking.LinkingData"
 Default=""
 X="640"
 Y="180"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="SecondLinking"
 Guid="d6a1e09c-59e2-4f03-9d06-ab3b7b7a7d9e"
>
<Comment>Returns the second entry in the list of linkings (only called if the number of linkings is greatere than one).</Comment>
<Cases>
<Case
 Name="Value"
 Guid="973e721c-5881-4502-b5ba-5956531d9a1d"
>
<Expression>BTM.Linking.LinkingData{
    LocationAccuracy =&gt; (FIRST X IN Linkings | X != (FIRST X IN Linkings)).LocationAccuracy,
    Orientation =&gt; (FIRST X IN Linkings | X != (FIRST X IN Linkings)).Orientation,
    Reaction =&gt; (FIRST X IN Linkings | X != (FIRST X IN Linkings)).Reaction,
    Distance =&gt; (FIRST X IN Linkings | X != (FIRST X IN Linkings)).Distance + (FIRST X IN Linkings).Distance,
    BaliseGroupIdentifier =&gt; (FIRST X IN Linkings | X != (FIRST X IN Linkings)).BaliseGroupIdentifier
}</Expression>
</Case></Cases>
</Function><Function
 Type="BTM.Linking.LinkingData"
 Default=""
 X="640"
 Y="240"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="GetLinkingFromNidBG"
 Guid="93f9bc96-b4a2-47d3-bb90-7c1578e1dd2d"
>
<Comment>Takes a BG identifier and returns the linking corresponding to it (if one exists)</Comment>
<Parameters>
<Parameter
 Type="Messages.NID_BG"
 Name="NID_BG"
 Guid="2019c8cd-5a5f-44e5-badd-5007b20e352d"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="c33cb167-421e-456d-a6bf-0eddbeb039be"
>
<Expression>REDUCE Linkings | X.BaliseGroupIdentifier == NID_BG
  USING X IN X
  INITIAL_VALUE LAST X IN Linkings</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="750"
 Y="180"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="IsSecondExpectedBG"
 Guid="7af71208-c772-4e89-aa2d-8e2fe4f7fc43"
>
<ReqRef
 Id="85c84a18-90d4-4035-90e4-abdba8729120"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="35ef26bf-e3dc-4ac9-bc12-45f796ae4cd3"
>
</ReqRef><Comment>Tells whether a Balise Group with the provided BG Identifier is currently expected</Comment>
<Cases>
<Case
 Name="There are at least two linked BGs"
 Guid="68c23152-454c-481a-82e3-6a70960513aa"
>
<PreConditions>
<PreCondition
 Guid="635d9b2a-2563-4d44-bd10-0be315054859"
>(COUNT X IN Linkings) &gt;= 2</PreCondition></PreConditions>
<Expression>SecondLinking().BaliseGroupIdentifier == (FIRST X IN CurrentBaliseGroup).Telegram.NID_BG</Expression>
</Case><Case
 Name="Otherwise"
 Guid="99459508-b95a-4115-8e05-d07664deffa4"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="860"
 Y="180"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="BGinExpectationWindow"
 Guid="bc073612-7beb-4876-ba83-6c868455d95a"
>
<ReqRef
 Id="2a179500-0c97-46fb-975e-2dda45df541e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8695d3e3-6ed2-47a7-9747-1587c5573dec"
>
</ReqRef><ReqRef
 Id="d5925ae4-bfc1-4822-9b11-3d735360e691"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f1cb4a21-215c-4362-8104-35596a0894ce"
>
</ReqRef><ReqRef
 Id="7ec28cec-f043-4430-802b-8219033d9a4f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c68a93aa-761d-4852-95cf-fec299f4f4c4"
>
</ReqRef><Comment>Checks whether the linked BG was found inside its expectation window</Comment>
<Parameters>
<Parameter
 Type="BTM.Linking.LinkingData"
 Name="LinkedBG"
 Guid="a5522054-89ca-44b5-b236-35449029ff8e"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Before expectation window"
 Guid="15156248-d7f5-45c8-bc33-312c95c69ec8"
>
<Comment>The BG location reference is before the start of the linking expectation window</Comment>
<PreConditions>
<PreCondition
 Guid="4b2c047b-90a3-49e7-b4f9-8ff093ea90a3"
>BGLocationReference.Position.Position + BGLocationReference.Position.UnderReadingAmountOdo &lt; LinkedBG.Distance - LinkedBG.LocationAccuracy + LRBG.Position.Position</PreCondition></PreConditions>
<Expression>False</Expression>
</Case><Case
 Name="After expectation window"
 Guid="0869f5e3-d8b3-4ac5-bc93-5184d0d0bea6"
>
<Comment>The BG location reference is after the start of the linking expectation window</Comment>
<PreConditions>
<PreCondition
 Guid="a13d9a26-6872-475a-b2a5-b2e0d9cf137e"
>BGLocationReference.Position.Position - BGLocationReference.Position.OverReadingAmountOdo &gt; LinkedBG.Distance + LinkedBG.LocationAccuracy + LRBG.Position.Position</PreCondition></PreConditions>
<Expression>False</Expression>
</Case><Case
 Name="Inside expectation window"
 Guid="9515b36a-18f1-4e88-96cb-278e802e919a"
>
<Comment>The BG is encountered inside the linking expectation window</Comment>
<Expression>True</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="60"
 Y="270"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="ExpectationWindowPassed"
 Guid="f5ae4295-6868-42ae-a35e-09289ccbec8b"
>
<ReqRef
 Id="d5925ae4-bfc1-4822-9b11-3d735360e691"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9d16e643-c434-440f-800c-d169384a560a"
>
</ReqRef><Comment>Determines if the balise antenna has passed the expectation window of the current linking.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="f0c0f7f7-c037-4ab3-a10b-87115cf305ae"
>
<Expression>AntennaPosition ( Default.DistanceInterval.Min ) &gt; CurrentLinking().Distance + CurrentLinking().LocationAccuracy</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="390"
 Y="210"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="RAMSWindowPassed"
 Guid="f2260646-2faf-4e84-997d-ff6eb4f89e94"
>
<ReqRef
 Id="59827ecc-eb52-4d61-8c08-58aa70975eea"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1fbe984e-c7ef-43e7-86cf-b0b74158241f"
>
</ReqRef><Comment>Determines if the balise antenna has passed the expectation window of the second linking in a row.</Comment>
<Cases>
<Case
 Name="Not applicable"
 Guid="cda2f0a1-ee9e-48cf-b4e8-f57dbad016fe"
>
<PreConditions>
<PreCondition
 Guid="30b42823-2f9d-4623-8372-76a13b49c0e1"
>NOT Available(RAMSSupervisedBG)</PreCondition></PreConditions>
<Expression>False</Expression>
</Case><Case
 Name="Value"
 Guid="da45ce52-17f4-4094-bc79-c1b74b35acbb"
>
<Expression>AntennaPosition( DistanceInterval.Min ) &gt; RAMSSupervisedBG.EndOfWindow</Expression>
</Case></Cases>
</Function></Functions>
<Procedures>
<Procedure
 X="640"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="LinkingInformationReceived"
 Guid="b36d74ff-248d-4a64-ad82-dc33020344e9"
>
<ReqRef
 Id="5e8ed861-509f-4d98-8c04-8bea3a8cd6c6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f7ca3ea4-f1bb-4242-8e5c-8e8f40ff836f"
>
</ReqRef><Comment>Handles the reception of linking information and stores it in internal variables.</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.LINKING.Message"
 Name="Packet"
 Guid="17d1099f-0a5e-4c5b-9b88-a0edee76fd61"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="ClearLinkingInformation"
 Guid="791123e1-19db-4836-99d0-16e17500fdef"
>
<Comment>Clears the previous linking information.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 Name="No infill, remove old information"
 Guid="7178bbc3-25d9-45a5-af00-1a77a210bae3"
>
<ReqRef
 Id="d98529ca-fda7-480c-8c31-33ce08d1b140"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9f6d2d00-0d68-434d-8d7a-a5c39e2dd1c1"
>
</ReqRef><ReqRef
 Id="1cb531d4-2809-484c-bf3f-445bebb332ef"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="843b436c-8500-4679-a447-5cd90dacff45"
>
</ReqRef><Comment>In case the new linking information is not an infill data, all the previous information is cleared.</Comment>
<PreConditions>
<PreCondition
 Guid="16d28157-dce0-492f-a815-20adf48b5991"
>Kernel.Infill.Data == EMPTY</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f4ed0c9f-1c84-4195-bc54-3ce40d23cbb2"
>Linkings &lt;- []</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Infill, remove information after infill location"
 Guid="40ced0d3-c8a9-40b2-9ad4-699d0a45700a"
>
<ReqRef
 Id="f0ea8f90-356c-47de-a7fd-4827ae488f00"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9a065f3d-c980-4476-b0b6-b48e1435e101"
>
</ReqRef><ReqRef
 Id="1cb531d4-2809-484c-bf3f-445bebb332ef"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="48467b6c-4fc4-46fa-88cf-82fe5f53ca67"
>
</ReqRef><Comment>In case the new linking information is an infill data, only the elements beyond the infill location are removed.</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="739997f0-0a9a-42ec-8b3b-8856cdc14a17"
>Linkings &lt;- MAP Linkings | NOT Before(
    ExpectedFirst=&gt;GetLinkingFromNidBG(Kernel.Infill.Data.NID_BG),
    ExpectedSecond=&gt;X,
    Collection=&gt;Linkings
)
  USING X IN X</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Insert first BG"
 Guid="0e93289c-ce01-44bf-bc80-89c125862c2a"
>
<Comment>Since the first element is not situated in a collection, it has to be inserted separately.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Insert first BG"
 Guid="851988ba-8bf9-43c5-a92c-263c4fbd2700"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="6ebb24f5-be8d-4df6-87cd-5edc20ff3c03"
>INSERT CreateLinkingData (
  D_LINK =&gt; Packet.D_LINK,
  NID_BG =&gt; Packet.NID_BG,
  Q_LINKORIENTATION =&gt; Packet.Q_LINKORIENTATION,
  Q_LINKREACTION =&gt; Packet.Q_LINKREACTION,
  Q_LOCACC =&gt; Packet.Q_LOCACC,
  Q_SCALE =&gt; Packet.Q_SCALE
)
IN Linkings</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Insert following BGs"
 Guid="278d8d73-6889-44f1-a3c7-b443ef0f9393"
>
<Comment>The following elements are inserted with APPLY operator.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Insert following BGs"
 Guid="f1abce2e-96f2-4d8b-aa83-e5fd2939fb4d"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="f313372b-6e45-44c5-a16a-2f82708636c7"
>APPLY StoreLinkingInfo ( Data =&gt; X, Q_SCALE =&gt; Packet.Q_SCALE ) ON Packet.Sequence1</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="750"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="StoreLinkingInfo"
 Guid="4a96e2f2-1676-4283-8150-5dcce152b97a"
>
<Comment>Stores a linking information in the list of available linking informations.</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.LINKING.SubStructure1"
 Name="Data"
 Guid="d22702d1-0c8b-41d3-8f99-53dd485e6de2"
>
</Parameter><Parameter
 Type="Messages.Q_SCALE"
 Name="Q_SCALE"
 Guid="e11ef72f-1a5b-4cab-abc1-3c72da4a2bef"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="Store info"
 Guid="e3791398-80a4-4ee3-a141-a8768935d3ff"
>
<Comment>Stores a linking information in the list of available linking informations.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Store info"
 Guid="6b6695bd-d089-4fdd-9e17-1592ec146539"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="0a7cfd2c-c2e7-4059-9963-dca8b4dc0007"
>INSERT CreateLinkingData (
  D_LINK =&gt; Data.D_LINK,
  NID_BG =&gt; Data.NID_BG,
  Q_LINKORIENTATION =&gt; Data.Q_LINKORIENTATION,
  Q_LINKREACTION =&gt; Data.Q_LINKREACTION,
  Q_LOCACC =&gt; Data.Q_LOCACC,
  Q_SCALE =&gt; Q_SCALE
) 
IN Linkings</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="860"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="StopExpectingBG"
 Guid="daa0e49f-223d-401a-b2e6-4c43a5fed628"
>
<ReqRef
 Id="b431b905-df98-4c23-9ff8-3da3b92a7a29"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="70edeac1-29cf-4a67-a25d-a8bb10e21bd7"
>
</ReqRef><ReqRef
 Id="259e3c43-f68a-4c80-8402-32349f27172d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="34f2596f-54be-4597-bd2c-07f7ad17bc75"
>
</ReqRef><ReqRef
 Id="6ae42f8d-795c-47e9-8a41-3f4433b18021"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="972ef265-6a0b-4c95-8efc-55ebe4330d5e"
>
</ReqRef><Comment>BGs are only considered in the order the linking was given to the train. This means that only the first element should ever be deleted.
This function is called whenever it is appropriate, so it does not need any preconditions to its action.</Comment>
<Parameters>
<Parameter
 Type="Messages.NID_BG"
 Name="ID"
 Guid="2450dcce-e7ee-44d9-93ca-ea4ca2416dcc"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Stop expecting current BG"
 Guid="662b3dc5-53fd-490d-9fa5-d31299970ac2"
>
<Comment>Remove the current linking from the list of linkings.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Stop expecting current BG"
 Guid="09f3424d-b8ae-43d8-904d-a185c3e22c58"
>
<PreConditions>
<PreCondition
 Guid="891bb526-64cc-4560-ba32-6a73d706b12a"
>(FIRST X IN Linkings).BaliseGroupIdentifier == ID</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f5e1d966-d547-4ac0-9400-f7ab8627a792"
>REMOVE FIRST IN Linkings</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Start balise cross-talk supervision"
 Guid="f834e2de-9329-4fd0-82db-3de962582e6e"
>
<Comment>If the new first linking is for repositioning information, start the RAMS cross-talk supervision function.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Start balise cross-talk supervision"
 Guid="9f34ba0b-1ddb-4749-8bc7-0a094b87e2d0"
>
<PreConditions>
<PreCondition
 Guid="34acd0cd-de6a-4962-a47f-b88615655367"
>CurrentLinking().BaliseGroupIdentifier == Messages.NID_BG.NID_UNKNOWN</PreCondition></PreConditions>
<Actions>
<Action
 Guid="87998e18-50ab-4356-b2d2-74b0e63528f2"
>RAMSRepositioningBG &lt;- RAMSSupervisionStruct{
    EndOfWindow =&gt; CurrentLinking().Distance + CurrentLinking().LocationAccuracy,
    Id =&gt; Messages.NID_BG.NID_UNKNOWN
}</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="640"
 Y="60"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="HandleLinkingError"
 Guid="6ec21532-1ddc-4a6e-81f8-749ef96463da"
>
<ReqRef
 Id="a58464f1-c74b-420f-ad30-03d671b764c8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4d57e55f-a085-43be-bf91-2bba7177339b"
>
</ReqRef><ReqRef
 Id="e301f9da-607b-45f9-a74b-a6d53cbfc408"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3e6d3dc8-dd65-4727-bbf7-01e58c414f9b"
>
</ReqRef><ReqRef
 Id="277ee440-7786-4aac-8364-7e60a82e94a1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="34595bf7-d0da-4fc1-96fd-b215075ebcf4"
>
</ReqRef><ReqRef
 Id="52ed2710-9a35-46d3-9d62-825665d41e0d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="91bdbfd2-34e5-4202-90ee-7b96a2db43f5"
>
</ReqRef><ReqRef
 Id="e529be25-15db-4250-b937-0f076614ae46"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7b2a0e8e-0483-4c77-bd46-b8ebf8c72509"
>
</ReqRef><ReqRef
 Id="b431b905-df98-4c23-9ff8-3da3b92a7a29"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="14476290-54b5-47b8-8662-e1632407f417"
>
</ReqRef><ReqRef
 Id="2c84de1b-61c3-4555-b485-6b4eae58ae90"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="289263a4-8987-4c9e-9cc7-6040fef1adfb"
>
</ReqRef><Comment>Apply the prescribed reaction if there is a data consistency problem</Comment>
<Parameters>
<Parameter
 Type="LinkingErrorEnum"
 Name="LinkingError"
 Guid="62cabd1b-e448-4a0f-943d-b04cdd1f727a"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Apply linking reaction"
 Guid="b7705540-c896-4991-ac91-962e6c50429d"
>
<Comment>First, apply the linking reaction of the linked BG</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Apply linking reaction"
 Guid="adf43d45-3eba-4106-b1c7-fede7164a7fb"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="d25d0a31-77cf-4f0b-afa9-86acd17caaa8"
>ApplyLinkingReaction(
    LinkingReaction =&gt; (FIRST X IN Linkings).Reaction
)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Update the second linking distance"
 Guid="1024949a-955e-4701-a399-dcf5aec130cd"
>
<Comment>Since linking distances are all measured from the previous linked BG, when one of the linked BGs is missed then the next one&apos;s expectation window must be moved back to compensate

eg. There are two linkings, one BG at 400m and another 350m further. They are stored as (BG1, 400m), (BG2, 350m).
If BG1 is missed, we must update the other one to (BG2, 750m).</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Update the second linking distance"
 Guid="b7baf7df-7836-45d5-beb6-2a740c450202"
>
<PreConditions>
<PreCondition
 Guid="547b565c-1141-4dd6-b6be-2780271a682f"
>(COUNT X IN Linkings) &gt;= 2</PreCondition></PreConditions>
<Actions>
<Action
 Guid="e340c660-827d-428f-b31a-bd1433093346"
><Comment>The SecondLinking function provides the second expected BG, but with the distance measured from the LRBG (instead of from the first expected BG)</Comment>
(FIRST X IN Linkings | X != FIRST X IN Linkings).Distance &lt;- SecondLinking().Distance</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Perform RAMS supervision"
 Guid="d37cca32-2073-4760-bec8-18956485578d"
>
<ReqRef
 Id="59827ecc-eb52-4d61-8c08-58aa70975eea"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d54dc02c-2858-4897-9a68-2be23d074885"
>
</ReqRef><Comment>Activate the RAMS supervision (Mitigation of balise reception degradation) if a linked BG has been missed.
Activate the service brake if a second linked BG in a row is missed.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Activate RAMS supervision"
 Guid="152c2070-e99c-41ac-9983-619145371700"
>
<Comment>If the expected BG&apos;s expectation window was passed, keep track of the end of the next expected BG&apos;s expectation window, for RAMS supervision.</Comment>
<PreConditions>
<PreCondition
 Guid="72349d33-45a8-41e4-940c-0270741518ca"
>LinkingError == LinkingErrorEnum.ExpectationWindowEnd</PreCondition><PreCondition
 Guid="c81cf5d3-5ba4-45c4-88ae-d440792088eb"
>NOT Available(RAMSSupervisedBG)</PreCondition><PreCondition
 Guid="4a406c10-9567-49cb-8325-7ee96d451c70"
>(COUNT X IN Linkings) &gt; 1</PreCondition></PreConditions>
<Actions>
<Action
 Guid="88dcdcbf-811a-45fb-a30c-f2cbd239bd3f"
>RAMSSupervisedBG &lt;- RAMSSupervisionStruct{
    EndOfWindow =&gt; SecondLinking().Distance + SecondLinking().LocationAccuracy,
    Id =&gt; SecondLinking().BaliseGroupIdentifier
}</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Second linking missed"
 Guid="495c664f-4a5e-494b-8712-8cad741094b8"
>
<Comment>If the end of the second BG&apos;s expectation window is passed, activate the service brake and remove the RAMS supervision information.</Comment>
<PreConditions>
<PreCondition
 Guid="f44c901a-254b-48c9-922d-5f7efd86147e"
>LinkingError == LinkingErrorEnum.ExpectationWindowEnd</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f5f18eac-bbda-4379-96e5-dfb47e13e27a"
>TIU.ServiceBrakeCommanded &lt;- True</Action><Action
 Guid="12fbd64d-db68-4145-9895-cb630522e463"
>RAMSSupervisedBG &lt;- EMPTY</Action><Action
 Guid="646bc014-8b5c-47e1-9466-bd062ff89279"
>Kernel.HandlingOfAcceptedAndStoredInformation.RAMSSupervisionFunctionLedToServiceBrake &lt;- True</Action><Action
 Guid="a4b0baca-b8ed-4220-8590-842a578e8b8f"
>Kernel.AddSBCommand(Kernel.BrakeReason.RAMSSupervisionTriggered)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Stop expecting the inconsistent BG"
 Guid="d28fd530-6d88-4aee-952e-4508fddee9da"
>
<Comment>Then stop expecting that BG</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Stop expecting the inconsistent BG"
 Guid="008d8432-2e3a-47d2-afeb-308763c39c36"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="3d1509f7-2827-41ac-8a3b-3b3057810dd2"
>StopExpectingBG( (FIRST X IN Linkings).BaliseGroupIdentifier )</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="860"
 Y="60"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="CheckBGBeforeHandling"
 Guid="46db880c-ef3f-4a0a-b4cc-e2d35ba556b3"
>
<ReqRef
 Id="689ab6d6-cac9-4667-86bf-c6be70fefd43"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a2e2fb3b-dd84-4c86-975b-7d6d3af82555"
>
</ReqRef><ReqRef
 Id="0547edfa-b17d-4b79-8cad-2fba135b2d95"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9bfafb88-420b-4da7-ae50-ac7cdb434667"
>
</ReqRef><ReqRef
 Id="3520c91c-8938-4bdf-b683-bc1fd7071fd7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7f50a28c-3294-45ec-abcf-f25872353706"
>
</ReqRef><ReqRef
 Id="572df3cf-8b3b-4e6d-b78e-c0ff6690a2cb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ac81e337-d784-4e3c-b81e-61c4aaace7bc"
>
</ReqRef><ReqRef
 Id="85c84a18-90d4-4035-90e4-abdba8729120"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9f39e6f1-1c6f-4d49-9449-091b5b6c69fa"
>
</ReqRef><ReqRef
 Id="2c84de1b-61c3-4555-b485-6b4eae58ae90"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a7b061c3-553a-46fd-8d83-965b0dbe14b6"
>
</ReqRef><ReqRef
 Id="259e3c43-f68a-4c80-8402-32349f27172d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8ce9acea-5496-46cc-97b3-76aee8407b74"
>
</ReqRef><ReqRef
 Id="b431b905-df98-4c23-9ff8-3da3b92a7a29"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c83c7e94-95e6-475f-9d5c-b6aeeb0a46e4"
>
</ReqRef><ReqRef
 Id="370bc14e-630a-4f72-87f6-54e50015825c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e6a6c189-97f6-4f51-9956-420679e3fd16"
>
</ReqRef><ReqRef
 Id="22b29a34-8fe5-4ccc-9aec-f79479570714"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="65fc2a0c-20a8-4de3-8e5c-7ab2646c7aea"
>
</ReqRef><ReqRef
 Id="45b975c5-6f3a-47c9-9f18-741bdd280f36"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2e571b5d-7f6e-4706-b8d9-704cc4440866"
>
</ReqRef><ReqRef
 Id="2a179500-0c97-46fb-975e-2dda45df541e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2ec34226-e3b2-4ee0-a85e-d53aa4286c61"
>
</ReqRef><ReqRef
 Id="d5925ae4-bfc1-4822-9b11-3d735360e691"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="99879114-f1fd-49c7-8798-fbf193b40038"
>
</ReqRef><ReqRef
 Id="ccf10657-245b-4fe0-a67e-320b3a3acd66"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="62fce0f9-f1df-45cc-8519-a8bef2998613"
>
</ReqRef><ReqRef
 Id="a28fa2ad-f49b-49e3-b6c9-a96b78f87074"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="39b783b6-ddcc-4861-93ca-c9b0d2b96780"
>
</ReqRef><ReqRef
 Id="2ae792ac-3c8b-4e81-a0b9-fcf10ab3dbdc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5a96836b-bf87-46e5-b194-0e5711a54457"
>
</ReqRef><ReqRef
 Id="d9694f89-1162-4ba5-a82c-a37e0df77929"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="87a2a88b-1e1b-4ed7-beeb-e3817870ead5"
>
</ReqRef><Comment>Performs all the linking and linking consistency checks needed before a balise message is handled</Comment>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Check list of expected balises"
 Guid="1c6c1ee3-5e2b-46de-b12e-939ceebac056"
>
<Comment>If the current mode is SH/SR, check the received  BG against the list of expected balises for SH/SR Mode.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="In SH mode"
 Guid="5aa01674-ac6a-41a6-ad84-8971d1ae9e14"
>
<ReqRef
 Id="aef89c33-3eb6-459c-901c-72a521999db9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="05824919-5263-420b-9c2a-992ae628a6e4"
>
</ReqRef><Comment>In SH mode, check for a list of expected Balise groups for SH.</Comment>
<PreConditions>
<PreCondition
 Guid="d3e69c54-db46-4f85-9ff3-3159f3eeaff0"
>Kernel.Mode == Default.Mode.SH</PreCondition></PreConditions>
<Actions>
<Action
 Guid="8d1a6745-9466-4063-a719-d54c187a08dc"
>MessageRejected &lt;- 
NOT Kernel.Shunting.BGIsExpected(CurrentBaliseGroup)</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Check Override"
 Guid="4943ad82-27d7-43c4-b277-643868333dfe"
>
<Comment>The actions depoend on whether the Override function is active.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Override active"
 Guid="6f42a3b6-0413-4061-a5fb-ab1fea4beb13"
>
<ReqRef
 Id="772e0087-dcb8-45bf-a888-56863cd592af"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6d332e7a-6bd1-4a3f-afbb-4273099d0492"
>
</ReqRef><ReqRef
 Id="f8000cfa-0807-4266-8df9-c687e29b4770"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e94c9171-3088-46d7-b3c7-d192767e41b8"
>
</ReqRef><Comment>If Override is active, then the only consequence on the unexpected balise is ending the Override.</Comment>
<PreConditions>
<PreCondition
 Guid="4d72ed6a-34ed-4ae1-bee2-5d3eee748c56"
>Kernel.HandleModeChange in Kernel.HandleModeChangeSM.Override</PreCondition></PreConditions>
<Actions>
<Action
 Guid="a1911e56-0595-4442-9bba-9d751ab62385"
>Kernel.HandleModeChange &lt;- Kernel.HandleModeChangeSM.NoProcedure</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Otherwise"
 Guid="b6c3eb5c-244e-4a41-8e01-6d3509939a7d"
>
<Comment>Otherwise, the the train will Trip.</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="834b94d2-1cc0-44a6-9de5-016da6df76c4"
>Kernel.Shunting.UnexpectedBGPassed&lt;- NOT Kernel.Shunting.BGIsExpected(CurrentBaliseGroup)</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="In SR mode"
 Guid="8a482241-5c9d-4374-876a-dee9e253676a"
>
<ReqRef
 Id="f7cb96a8-a052-46e7-a159-d08ccb5dac88"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5c1abe7f-0f3b-4028-b63a-0aac206b28af"
>
</ReqRef><Comment>In SR mode, check for a list of expected Balise groups for SR.</Comment>
<PreConditions>
<PreCondition
 Guid="b0d0f21d-b735-4fdb-bb84-9a28eba9d3d1"
>Kernel.Mode == Default.Mode.SR</PreCondition></PreConditions>
<Actions>
<Action
 Guid="6cb1c474-bc67-4f05-835f-4028f0ac9989"
>MessageRejected &lt;- 
NOT Kernel.StaffResponsible.BGIsExpected(CurrentBaliseGroup)</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Check Override"
 Guid="09461e53-fbd0-411d-bf24-e120886a608a"
>
<Comment>The actions depoend on whether the Override function is active.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Override active"
 Guid="5719c186-4073-47b5-bf4f-6e0e9d3bf64b"
>
<ReqRef
 Id="772e0087-dcb8-45bf-a888-56863cd592af"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b7d9cb74-e25e-4b10-85d1-c1b96eec0f87"
>
</ReqRef><ReqRef
 Id="f8000cfa-0807-4266-8df9-c687e29b4770"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5f3e462e-cc2e-4c47-b1fa-8d46bb271e0b"
>
</ReqRef><Comment>If Override is active, then the only consequence on the unexpected balise is ending the Override.</Comment>
<PreConditions>
<PreCondition
 Guid="99004535-a5d7-4dad-b64c-4b6ccd0e0a0a"
>Kernel.HandleModeChange in Kernel.HandleModeChangeSM.Override</PreCondition></PreConditions>
<Actions>
<Action
 Guid="50b573f5-f985-4c63-a42e-68a3738515a0"
>Kernel.HandleModeChange &lt;- Kernel.HandleModeChangeSM.NoProcedure</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Otherwise"
 Guid="52c4be68-2cd6-4ce2-b857-cea879dcfd47"
>
<Comment>Otherwise, the the train will Trip.</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="da4003ca-f51b-4105-998f-3eb77cbdfcde"
>Kernel.StaffResponsible.UnexpectedBGPassed&lt;- NOT Kernel.StaffResponsible.BGIsExpected(CurrentBaliseGroup)</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Otherwise"
 Guid="dc1777c6-7bfe-4c25-b2f7-0679143c756a"
>
<Comment>In other modes, we do not need to check against a list of expected Balise groups.</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="b8a8678f-a8b2-46f1-8bf8-616eb813e4d9"
>MessageRejected &lt;- False</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Check VBC"
 Guid="caf9206b-cf25-4596-a689-99b419d3dcfb"
>
<Comment>Check the Virtual Balise Covers against the message</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Check VBC"
 Guid="7e86b069-6f62-4f0b-becf-0151f3bb1dc6"
>
<PreConditions>
<PreCondition
 Guid="f09ace5e-2bad-4e68-8426-d3bbf8bcdcc8"
>Kernel.ActiveFunctions.ManageVirtualBaliseCovers()</PreCondition><PreCondition
 Guid="782453fa-a201-492f-b441-89440b123b19"
>NOT MessageRejected</PreCondition></PreConditions>
<Actions>
<Action
 Guid="1a8e70a6-fc3d-4212-a393-e6e1c1372d77"
>MessageRejected &lt;- THERE_IS X IN Kernel.VirtualBaliseCover.VirtualBaliseCovers | ( X.Marker.Area == (FIRST Message IN CurrentBaliseGroup).Telegram.NID_C  AND  X.Marker.Marker == (FIRST Message IN CurrentBaliseGroup).Telegram.NID_BG )</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Check the coutry/region identifiers"
 Guid="e64b04f0-4cb3-4e30-85e9-507a57b9bce8"
>
<ReqRef
 Id="319c077a-b554-46e1-b263-636a65b5e1e9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="08104a7e-e6a7-4e29-9cad-5a1e8018da1e"
>
</ReqRef><ReqRef
 Id="c9d51e90-7f7e-4c3e-b330-dec4e7a4499d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="70873974-ce7e-4f1a-aff0-b9750addfa2e"
>
</ReqRef><Comment>Check the Virtual Balise Covers for any markers that are not applicable i nthe current region.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Remove markers with NID_C different to BG"
 Guid="47d119c4-d206-455a-9286-1cb961ec1be7"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="2e1d9662-6036-4897-a228-37c00a44fe2b"
>Kernel.VirtualBaliseCover.CheckNID_C(
    NID_C =&gt; (FIRST Message IN CurrentBaliseGroup).Telegram.NID_C
)</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Check Linking"
 Guid="03c7adad-c5f2-4e0c-b75a-fc95323fbc0e"
>
<ReqRef
 Id="22b29a34-8fe5-4ccc-9aec-f79479570714"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="11686a8a-2e17-4465-98bb-16877dd16273"
>
</ReqRef><ReqRef
 Id="45b975c5-6f3a-47c9-9f18-741bdd280f36"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="613f2ef2-9b75-4bce-ab3b-9e42b280c042"
>
</ReqRef><ReqRef
 Id="9a35a3cc-6ff3-40a5-b097-b6dd250e24bd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="932d00f8-4441-4e04-bed6-fc45254299a5"
>
</ReqRef><Comment>This handles the case where there is no linking information available or the received message is unlinked</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Do not check linking"
 Guid="df90ec56-8901-46cd-adf6-222ce297838b"
>
<Comment>In all but FS, LS and OS modes, linking consistency is not checked.</Comment>
<PreConditions>
<PreCondition
 Guid="75e2e59b-82ce-46f5-b4c3-f77163334510"
>NOT Kernel.ActiveFunctions.CheckLinkingConsistency()</PreCondition><PreCondition
 Guid="29540586-570d-4072-b0e3-c75fb0a754a3"
>NOT MessageRejected</PreCondition></PreConditions>
<Actions>
<Action
 Guid="b5267b4f-321c-48a3-8cb1-b091b3a4496d"
>CheckMessageConsistency(
    DistanceFromLRBG =&gt; Kernel.TrainPosition.FrontEndPosition(Default.DistanceInterval.Nom),
    LinkingUsed =&gt; False,
    LinkingReaction =&gt; LinkingReaction.CommandServiceBrake
)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="No Linking"
 Guid="1674753e-32b6-4435-b722-c9d87cf7a490"
>
<Comment>Linking is not applicable in this case</Comment>
<PreConditions>
<PreCondition
 Guid="e42b64dc-30a7-4d68-85ec-69e259afc79d"
>ConsiderBGWithoutLinking()</PreCondition><PreCondition
 Guid="e2380874-6cd0-43ab-90a7-bc48cdb67166"
>NOT MessageRejected</PreCondition></PreConditions>
<Actions>
<Action
 Guid="bac12566-89d7-4f78-a052-2705f05be489"
>CheckMessageConsistency(
    DistanceFromLRBG =&gt; Kernel.TrainPosition.FrontEndPosition(Default.DistanceInterval.Nom),
    LinkingUsed =&gt; False,
    LinkingReaction =&gt; LinkingReaction.CommandServiceBrake
)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Linking"
 Guid="1fb15c41-3215-4765-a3ec-e3745a94adb7"
>
<ReqRef
 Id="dc13fa0f-3c6b-42d8-a367-9de75248768d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="568b2e62-5a2a-4d68-ae5c-66b129595653"
>
</ReqRef><Comment>Consider the BG with linking</Comment>
<PreConditions>
<PreCondition
 Guid="5f6b30d6-5215-4d2b-bd11-4191bbad5d7f"
>ConsiderBGWithLinking()</PreCondition><PreCondition
 Guid="956fa6d3-bdee-4ddb-96ba-4dd281e6e5c0"
>NOT MessageRejected</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Check balise cross-talk RAMS"
 Guid="84bb496a-8f09-4b15-80be-d4e46aa8e27b"
>
<ReqRef
 Id="6ae42f8d-795c-47e9-8a41-3f4433b18021"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6a52c330-f335-47a7-9669-8c47a73c9b9d"
>
</ReqRef><Comment>If the RAMS cross-talk supervision function is active, check the linking. If the balise was linked and is expected in the linking information, delete the supervision information as it is no longer needed.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Remove RAMS if known, linked BG"
 Guid="b2d4afb6-ba51-4ccb-9557-e58bd290d804"
>
<ReqRef
 Id="848fea93-159f-4a91-8e12-25254251ce91"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9d9a39dd-ce42-4973-b858-899bf41e5a07"
>
</ReqRef><PreConditions>
<PreCondition
 Guid="5c4ec92f-7397-4b1a-8e94-ab0d3f2c56b3"
>CurrentLinking().BaliseGroupIdentifier != Messages.NID_BG.NID_UNKNOWN</PreCondition></PreConditions>
<Actions>
<Action
 Guid="369dfef1-1fae-4ce2-b6c1-777ef0432e42"
>RAMSRepositioningBG &lt;- EMPTY</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Check balise reception RAMS"
 Guid="d830518c-e527-4ce2-8aba-7ea17d82d7b7"
>
<Comment>If the RAMS supervision function is active, check it against the current BG.
If the IDs match, stop the RAMS supervision.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Remove RAMS supervision of passed BG"
 Guid="cb55754b-6fb9-4556-a4e0-28de420565c0"
>
<PreConditions>
<PreCondition
 Guid="620c93eb-fc20-46b3-aa97-2c6d1ad2a3ab"
>Available(RAMSSupervisedBG)
  AND  
RAMSSupervisedBG.Id == (FIRST X IN CurrentBaliseGroup).Telegram.NID_BG</PreCondition></PreConditions>
<Actions>
<Action
 Guid="efaa08c9-62f2-45d9-b68f-3a1da3e29641"
>RAMSSupervisedBG &lt;- EMPTY</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Linking consistency"
 Guid="fe7b358e-e6db-40dd-a1da-f91ccb48aa66"
>
<ReqRef
 Id="0547edfa-b17d-4b79-8cad-2fba135b2d95"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="55293400-a7f5-4956-a033-2e9096f7b0e9"
>
</ReqRef><ReqRef
 Id="3520c91c-8938-4bdf-b683-bc1fd7071fd7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e3f1793b-11f7-4795-8bce-77cca8e969ce"
>
</ReqRef><ReqRef
 Id="2a179500-0c97-46fb-975e-2dda45df541e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a3944870-66f6-4372-bfbe-b52916f561a4"
>
</ReqRef><ReqRef
 Id="d5925ae4-bfc1-4822-9b11-3d735360e691"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0be5aede-ece2-4ec9-8f1c-d767bb0c4aaf"
>
</ReqRef><ReqRef
 Id="ccf10657-245b-4fe0-a67e-320b3a3acd66"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a7caea05-929f-4b2b-9ba3-67fafa1cf76e"
>
</ReqRef><Comment>Check that the linking consistency information is all valid and act accordingly</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="No linking consistency errors"
 Guid="92ae5112-1d17-470b-8deb-cde67e73ab4e"
>
<Comment>Linking consistency is OK
If the BG was passed in the right direction, handle the message. If not, the train will be tripped (as a mode transition, no need to specify that here)</Comment>
<PreConditions>
<PreCondition
 Guid="64a649af-e04e-4e87-9f05-10155fb800fd"
>ConsistencyError() == LinkingErrorEnum.NoError</PreCondition><PreCondition
 Guid="8a07516f-5e49-4e7f-9fb9-ca69da857f66"
>BGOrientationIsValid()</PreCondition><PreCondition
 Guid="ece8fce6-b40d-40dc-bf42-8979cd157cb4"
>ConsiderBGWithLinking()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="6f9ef685-68b5-4cf8-ab5b-fe3765ff7cb1"
>CheckMessageConsistency(
    DistanceFromLRBG =&gt; (FIRST X IN Linkings).Distance,
    LinkingUsed =&gt; True,
    LinkingReaction =&gt; (FIRST X IN Linkings).Reaction
)</Action><Action
 Guid="73f60427-194a-4f61-9082-16f71fa2409d"
>StopExpectingBG( (FIRST X IN CurrentBaliseGroup).Telegram.NID_BG )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="There is an error in the linking consistency of the current BG"
 Guid="eb7ab073-eb3e-4a3f-99bb-2227d1147a1b"
>
<Comment>If the received, linked BG is the next one expected, its message can still be accepted</Comment>
<PreConditions>
<PreCondition
 Guid="55a61f56-5d3b-4c7d-8122-989e234d8234"
>ConsistencyError() != LinkingErrorEnum.NoError</PreCondition></PreConditions>
<Actions>
<Action
 Guid="4dd4bc3d-0771-48b0-8b36-200f331fbb16"
>HandleConsistencyError()</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Check RAMS repositioning function"
 Guid="b9dec577-e68c-4cb0-83bc-4e13d56f5bec"
>
<ReqRef
 Id="6ae42f8d-795c-47e9-8a41-3f4433b18021"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f9eabc81-580c-4d83-b081-34fbb10dd3d3"
>
</ReqRef><ReqRef
 Id="aaa581cb-18a1-43c9-861e-43c4d76ec1fe"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f0a3dba2-4e71-4107-a0e9-129298deb930"
>
</ReqRef><Comment>If the received BG is linked but is not present in the linking information while the RAMS cross-talk supervision function is active, active the service brake.</Comment>
<PreConditions>
<PreCondition
 Guid="5777b7bc-699f-45f1-89ed-9f7a10ab06d7"
>Available(RAMSRepositioningBG)</PreCondition><PreCondition
 Guid="e1a20219-11e1-4519-8332-9991357825e0"
>THERE_IS message IN CurrentBaliseGroup | 
(
  THERE_IS packet IN message.Telegram.Sequence1 |
    Available(packet.TRACK_TO_TRAIN.REPOSITIONING_INFORMATION)
)</PreCondition><PreCondition
 Guid="97e201cd-7e8c-4cd0-9796-d3b94acf3a02"
>(FIRST X IN CurrentBaliseGroup | NOT X.Missed).Telegram.Q_LINK == Messages.Q_LINK.Linked</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f898bb73-e730-4511-924e-65a22a77ddd7"
>TIU.ServiceBrakeCommanded &lt;- True</Action><Action
 Guid="f7aea1c2-1e1f-4d47-8f36-412e4107ba4b"
>Kernel.HandlingOfAcceptedAndStoredInformation.RAMSSupervisionFunctionLedToServiceBrake &lt;- True</Action><Action
 Guid="294b1490-c94d-4bac-b054-feaef3d222b4"
>Kernel.AddSBCommand(Kernel.BrakeReason.RAMSSupervisionTriggered)</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="750"
 Y="60"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="HandleConsistencyError"
 Guid="bfee8779-6323-4330-8e80-2d2d54322199"
>
<ReqRef
 Id="0547edfa-b17d-4b79-8cad-2fba135b2d95"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2c91ae43-c72a-4c3a-9710-9300ed5342c7"
>
</ReqRef><Comment>Procedure that handles the case where the received BG is linked, but there is a linking consistency error</Comment>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Apply linking reaction"
 Guid="f07d5a05-8583-4a98-a5f2-1464ad307db7"
>
<Comment>Apply the linking reaction of the first expected BG in all cases</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Apply linking reaction"
 Guid="1e54cf59-c9c9-464a-950b-5f5fb8ceebf8"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="d500b496-dbe7-4910-a496-022d1d5989a4"
>HandleLinkingError(ConsistencyError())</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Check received BG is the second expected BG"
 Guid="b84f47c1-6ac0-4dd1-bee1-1b95b875e026"
>
<ReqRef
 Id="85c84a18-90d4-4035-90e4-abdba8729120"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1f9f293c-ca8a-4996-a3b9-239e6af6d0ce"
>
</ReqRef><Comment>If the consistency error is that the BG is in the linking data, but is not the first BG expected, handle it normally (after the linking reaction has been applied).

As the first part of this procedure deletes the first (inconsistent) BG from the Linking data, we are now checking the first linked BG a second time</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Early reception of the second expected BG"
 Guid="4da56af9-9b8a-454e-a404-65c99ce4372f"
>
<Comment>This is the application of req. 3.4.4.4.6.1</Comment>
<PreConditions>
<PreCondition
 Guid="5f012522-0de0-4446-8302-6097ee955f4d"
>Linkings != []
  AND  
(FIRST X IN CurrentBaliseGroup).Telegram.NID_BG == CurrentLinking().BaliseGroupIdentifier</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Check the new first linked BG"
 Guid="087cea16-6a8a-40b8-b9ab-6551b1eb0ffa"
>
<Comment>Check the expectation window of the new first linked BG</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="The second expected BG is received in its expectation window"
 Guid="eec56773-c85c-4885-b2db-49ccbf50d10c"
>
<Comment>If it is inside its expectation window, handle the message normally</Comment>
<PreConditions>
<PreCondition
 Guid="4763c511-acc0-4a63-804e-33272d25fac6"
>BGinExpectationWindow( CurrentLinking() )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="df96badb-3bc3-40d3-b767-aa2ff7b5b2be"
>CheckMessageConsistency(
    DistanceFromLRBG =&gt; CurrentLinking().Distance,
    LinkingUsed =&gt; True,
    LinkingReaction =&gt; CurrentLinking().Reaction
)</Action><Action
 Guid="b1dfce5d-66ae-4d4d-a99a-2708b3c6650f"
>StopExpectingBG( (FIRST X IN CurrentBaliseGroup).Telegram.NID_BG )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Second expected BG outside expectation window"
 Guid="8ebd686c-0953-4d10-906f-adf6bfdcc6cf"
>
<Comment>Apply the linking reaction</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="763423de-7f3b-4c67-9767-b9011d7707f8"
>HandleLinkingError(LinkingErrorEnum.BGEncounteredEarly)</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="640"
 Y="120"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="ApplyLinkingReaction"
 Guid="ef7b2eb1-c570-4db5-9755-940b33b8c20b"
>
<ReqRef
 Id="a58464f1-c74b-420f-ad30-03d671b764c8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a3ea2b07-78b0-4192-ab97-c390c4c8ace1"
>
</ReqRef><ReqRef
 Id="e301f9da-607b-45f9-a74b-a6d53cbfc408"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ee75e749-fdd1-4d3f-81e9-d9b59d5d6531"
>
</ReqRef><ReqRef
 Id="277ee440-7786-4aac-8364-7e60a82e94a1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b9f45786-2958-420c-afcf-c33d2fde385c"
>
</ReqRef><ReqRef
 Id="52ed2710-9a35-46d3-9d62-825665d41e0d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="49c5522a-b6fb-49dc-8bbc-613c695d5651"
>
</ReqRef><ReqRef
 Id="e529be25-15db-4250-b937-0f076614ae46"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f04a1e81-0815-48c9-9a55-4c43318796fa"
>
</ReqRef><ReqRef
 Id="a0f4b0d4-ee6d-40d4-94b4-05dd94f6bcd2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a3d5ea02-df3f-4278-b953-201d210ede9f"
>
</ReqRef><ReqRef
 Id="00031a80-e9f3-4821-a0a6-1d322a75fa85"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="46d6aca3-07fd-404f-a004-7479e0e284cf"
>
</ReqRef><ReqRef
 Id="a7df0f1f-2d5f-4baa-b656-9ddbc4393074"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2f3e1348-f97a-4e1f-9af3-9e3586e4831f"
>
</ReqRef><ReqRef
 Id="d40be57e-365b-4f3a-ad26-7ff1d347c5f9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="675e8dfd-79eb-499e-9596-e20c4d6deef9"
>
</ReqRef><ReqRef
 Id="11ea7b7f-ac4e-40fe-90ea-b1c4713fac8e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b555e6fe-262a-43ba-a4d1-64eb45d9f406"
>
</ReqRef><Comment>Applies the linking reaction of the current linking.</Comment>
<Parameters>
<Parameter
 Type="LinkingReaction"
 Name="LinkingReaction"
 Guid="c41689f1-1eb1-48f2-bde6-d55e1c8c8136"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Apply linking reaction"
 Guid="f1fe9f61-e172-4e5a-8af9-248c5d841e04"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Apply service brake"
 Guid="239bf11a-8365-47dc-ae2d-ec17cf099c46"
>
<ReqRef
 Id="52ed2710-9a35-46d3-9d62-825665d41e0d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="95cdd889-a6df-4fd4-8409-67b0edc420e8"
>
</ReqRef><ReqRef
 Id="c41b87f6-3ab7-4925-8ce9-eae8005f051f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d25c34a0-f247-495d-8234-5aeb046a7dab"
>
</ReqRef><ReqRef
 Id="3c5e0f89-6000-4105-b9fb-8015551e56d8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8ce24dc2-b803-484d-ad50-a99ebde98a96"
>
</ReqRef><Comment>Linking reaction: command service brake.</Comment>
<PreConditions>
<PreCondition
 Guid="252f8f77-05b8-42b2-9b28-8f095360190a"
>LinkingReaction == LinkingReaction.CommandServiceBrake</PreCondition></PreConditions>
<Actions>
<Action
 Guid="bfc6430f-ae00-42e0-8bd9-645cf6379bf4"
>Kernel.SpeedAndDistanceMonitoring.TriggerSBCommand()</Action><Action
 Guid="98a091b7-4d8f-4619-befd-170f98fbc874"
>INSERT Kernel.EmergencyStop{
    IsConditional =&gt; False,
    Id =&gt; 0,
    StopLocation =&gt; 0.0,
    Reason =&gt; Kernel.BrakeReason.BaliseGroupMessageConsistencyProblem
}
IN Kernel.EmergencyStops</Action><Action
 Guid="dcddda32-ea7d-4603-a874-b66bdda37327"
>DMI.MasterDMI().Out_BrakeReason.Display()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Train trip"
 Guid="cf494783-6953-4567-9a26-37bdf53bac2e"
>
<ReqRef
 Id="a0f4b0d4-ee6d-40d4-94b4-05dd94f6bcd2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5b039f0e-3e29-4301-b69b-d220ccf918be"
>
</ReqRef><ReqRef
 Id="277ee440-7786-4aac-8364-7e60a82e94a1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5fb0a21a-1738-4e14-aa14-125aea73c4e9"
>
</ReqRef><Comment>Linking reaction: train trip.</Comment>
<PreConditions>
<PreCondition
 Guid="dc77f423-8ec6-4f72-a26c-5a8f78d45398"
>LinkingReaction == LinkingReaction.TrainTrip</PreCondition></PreConditions>
<Actions>
<Action
 Guid="ae19ed3a-7f6d-4b56-88d8-3ad85658ff6d"
>TrainTripDueToLinkingInconsistency &lt;- True</Action><Action
 Guid="dfa06d79-132e-4330-a9e1-9cf9c3095a11"
>DMI.MasterDMI().Out_BrakeReason.Display()</Action><Action
 Guid="14f5f361-4018-437e-aa02-d290a7048a2b"
>INSERT Kernel.EmergencyStop{
    IsConditional =&gt; False,
    Id =&gt; 0,
    StopLocation =&gt; 0.0,
    Reason =&gt; Kernel.BrakeReason.BaliseGroupMessageConsistencyProblem
}
IN Kernel.EmergencyStops</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure></Procedures>
<Variables>
<Variable
 Type="Boolean"
 DefaultValue="False"
 VariableMode="Internal"
 X="380"
 Y="320"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="TrainTripDueToLinkingInconsistency"
 Guid="59b44451-8f40-4f77-9cd0-735dfe0b317b"
>
<ReqRef
 Id="a0f4b0d4-ee6d-40d4-94b4-05dd94f6bcd2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7bd42be7-80a5-4df1-b521-8ca1a2e61a97"
>
</ReqRef><Comment>Indicates that the train should be tripped due to a linking consistency error (mode transition condition 17)</Comment>
</Variable><Variable
 Type="Linkings"
 DefaultValue="[]"
 VariableMode="Internal"
 X="500"
 Y="320"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Linkings"
 Guid="0eba6fac-cb5c-4709-a3df-b9a398dedae4"
>
<ReqRef
 Id="4ae178ee-6db4-474c-aa88-d5f8bd8ea1d7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="04216c23-661e-417d-83f6-9414d867e5d3"
>
</ReqRef><ReqRef
 Id="5e8ed861-509f-4d98-8c04-8bea3a8cd6c6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b46e08a6-2387-4cc6-a9e0-55c6e04acb72"
>
</ReqRef><Comment>Stores the next linking data as provided by the balises</Comment>
</Variable><Variable
 Type="Boolean"
 DefaultValue="True"
 VariableMode="Internal"
 X="260"
 Y="320"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="MessageRejected"
 Guid="a9ff2c4e-90d5-42ef-87ca-28b158139423"
>
<Comment>Used to determine whether the current Balise message has been rejected due to linking or VBC.</Comment>
</Variable><Variable
 Type="RAMSSupervisionStruct"
 DefaultValue="EMPTY"
 VariableMode="Internal"
 X="620"
 Y="320"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="RAMSSupervisedBG"
 Guid="42b47c1c-198d-4e03-a333-4d857d4c5421"
>
<ReqRef
 Id="59827ecc-eb52-4d61-8c08-58aa70975eea"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="25adec3e-de83-4beb-a8eb-0043c6151409"
>
</ReqRef><Comment>The currently supervised BG for the RAMS (EMPTY unless the previous linked BG was not found before the end of its expectation window).</Comment>
</Variable><Variable
 Type="RAMSSupervisionStruct"
 DefaultValue="EMPTY"
 VariableMode="Internal"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="RAMSRepositioningBG"
 Guid="d5b30f75-a35d-491b-a217-d777acd05fa0"
>
<ReqRef
 Id="6ae42f8d-795c-47e9-8a41-3f4433b18021"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a6ba06db-a4c5-43ce-ba2d-9af8d6d7e61e"
>
</ReqRef><Comment>Contains the identity and end of expectation window of a linked repositioning BG.</Comment>
</Variable></Variables>
<Rules>
<Rule
 Priority="CleanUp"
 X="60"
 Y="360"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="CleanUpLinkingReaction"
 Guid="2e4fbfea-4178-41a0-82bf-73e46d001309"
>
<Comment>Resets the values of the linking reaction variable, TrainTripDurToLinkingInconsistency</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Train trip"
 Guid="98ca2a07-69e4-4b6f-b8e6-110f14c11cd5"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="a4712cfb-db0c-4f4d-bec4-dedbd6e4bb7a"
>TrainTripDueToLinkingInconsistency &lt;- False</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="CleanUp"
 Y="60"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Clean up RAMS repositioning"
 Guid="27eeb240-ae1a-4396-9162-521d74f6416f"
>
<ReqRef
 Id="6ae42f8d-795c-47e9-8a41-3f4433b18021"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3ab6949a-301f-49c0-b6fa-8eb30481bec6"
>
</ReqRef><ReqRef
 Id="baeb0b9b-6e0d-4bcf-b5eb-cd57d7499198"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b99c4336-0b70-4185-9601-91bba3f52bc2"
>
</ReqRef><Comment>At the end of the expectation window of the repositioning balise group, delete the information used by the RAMS supervision function.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Delete information at the end of the expectation window"
 Guid="53ae84c5-99e8-4438-af01-fe85426c6086"
>
<PreConditions>
<PreCondition
 Guid="31e13c42-91f0-4f0d-80c6-0ac0955b0353"
>Available(RAMSRepositioningBG)
  AND  
AntennaPosition( Default.DistanceInterval.Min ) &gt; RAMSRepositioningBG.EndOfWindow</PreCondition></PreConditions>
<Actions>
<Action
 Guid="05d233d1-f4fd-4e47-9d02-eec5223c9448"
>RAMSRepositioningBG &lt;- EMPTY</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</NameSpace>
